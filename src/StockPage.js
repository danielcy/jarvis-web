import React from "react";
import moment from "moment";
import ReactEcharts from 'echarts-for-react';
import './StockPage.css'

let upColor = '#ec0000';
let downColor = '#00da3c';

let dataUrl = "https://ali-stock.showapi.com/realtime-k?";
let appCode = "APPCODE 9b138b2dbe0f4ee0a6ec170a0b77ac0e";

let testTime = ["2017-01-03", "2017-01-04", "2017-01-09", "2017-01-10", "2017-01-11", "2017-01-12", "2017-01-13", "2017-01-16", "2017-01-17", "2017-01-19", "2017-01-20", "2017-01-23", "2017-01-25", "2017-01-26", "2017-02-06", "2017-02-07", "2017-02-08", "2017-02-09", "2017-02-10", "2017-02-15", "2017-02-16", "2017-02-17", "2017-02-20", "2017-02-21", "2017-02-23", "2017-02-24", "2017-02-27", "2017-02-28", "2017-03-01", "2017-03-02", "2017-03-03", "2017-03-06", "2017-03-07", "2017-03-08", "2017-03-09", "2017-03-10", "2017-03-13", "2017-03-16", "2017-03-20", "2017-03-21", "2017-03-22", "2017-03-24", "2017-03-27", "2017-03-28", "2017-03-29", "2017-03-30", "2017-03-31", "2017-04-05", "2017-04-07", "2017-04-10", "2017-04-11", "2017-04-12", "2017-04-14", "2017-04-17", "2017-04-18", "2017-04-19", "2017-04-20", "2017-04-21", "2017-04-24", "2017-04-25", "2017-04-26", "2017-04-28", "2017-05-02", "2017-05-03", "2017-05-05", "2017-05-08", "2017-05-09", "2017-05-10", "2017-05-11", "2017-05-12", "2017-05-15", "2017-05-17", "2017-05-22", "2017-05-26", "2017-05-31", "2017-06-01", "2017-06-02", "2017-06-05", "2017-06-06", "2017-06-07", "2017-06-08", "2017-06-09", "2017-06-12", "2017-06-13", "2017-06-14", "2017-06-15", "2017-06-16", "2017-06-19", "2017-06-21", "2017-06-22", "2017-06-23", "2017-06-27", "2017-06-28", "2017-06-30", "2017-07-03", "2017-07-04", "2017-07-06", "2017-07-10", "2017-07-17", "2017-07-18", "2017-07-19", "2017-07-20", "2017-07-21", "2017-07-25", "2017-07-27", "2017-07-28", "2017-07-31", "2017-08-02", "2017-08-03", "2017-08-04", "2017-08-07", "2017-08-09", "2017-08-10", "2017-08-11", "2017-08-14", "2017-08-15", "2017-08-16", "2017-08-21", "2017-08-24", "2017-08-25", "2017-08-28", "2017-08-29", "2017-08-30", "2017-09-01", "2017-09-04", "2017-09-05", "2017-09-06", "2017-09-07", "2017-09-08", "2017-09-11", "2017-09-12", "2017-09-15", "2017-09-18", "2017-09-20", "2017-09-22", "2017-09-26", "2017-09-27", "2017-09-29", "2017-10-09", "2017-10-10", "2017-10-12", "2017-10-13", "2017-10-16", "2017-10-17", "2017-10-18", "2017-10-19", "2017-10-20", "2017-10-23", "2017-10-25", "2017-10-26", "2017-10-30", "2017-10-31", "2017-11-01", "2017-11-02", "2017-11-06", "2017-11-07", "2017-11-08", "2017-11-09", "2017-11-13", "2017-11-15", "2017-11-17", "2017-11-20", "2017-11-21", "2017-11-22", "2017-11-23", "2017-11-24", "2017-11-27", "2017-11-28", "2017-11-29", "2017-12-01", "2017-12-04", "2017-12-05", "2017-12-06", "2017-12-08", "2017-12-11", "2017-12-13", "2017-12-14", "2017-12-15", "2017-12-18", "2017-12-21", "2017-12-22", "2017-12-25", "2017-12-26", "2017-12-27", "2017-12-28", "2018-01-03", "2018-01-04", "2018-01-08", "2018-01-10", "2018-01-11", "2018-01-12", "2018-01-15", "2018-01-16", "2018-01-17", "2018-01-18", "2018-01-19", "2018-01-22", "2018-01-23", "2018-01-24", "2018-01-26", "2018-01-29", "2018-01-30", "2018-01-31", "2018-02-01", "2018-02-02", "2018-02-07", "2018-02-08", "2018-02-09", "2018-02-12", "2018-02-13", "2018-02-14", "2018-02-22", "2018-02-23", "2018-02-26", "2018-02-27", "2018-03-05", "2018-03-06", "2018-03-07", "2018-03-08", "2018-03-09", "2018-03-14", "2018-03-16", "2018-03-19", "2018-03-21", "2018-03-22", "2018-03-23", "2018-03-27", "2018-03-28", "2018-03-29", "2018-04-02", "2018-04-03", "2018-04-10", "2018-04-12", "2018-04-13", "2018-04-17", "2018-04-18", "2018-04-19", "2018-04-20", "2018-04-23", "2018-04-24", "2018-04-25", "2018-04-26", "2018-05-02", "2018-05-03", "2018-05-04", "2018-05-07", "2018-05-08", "2018-05-09", "2018-05-15", "2018-05-16", "2018-05-18", "2018-05-23", "2018-05-24", "2018-05-25", "2018-05-29", "2018-05-30", "2018-05-31", "2018-06-04", "2018-06-05", "2018-06-06", "2018-06-07", "2018-06-08", "2018-06-11", "2018-06-13", "2018-06-15", "2018-06-20", "2018-06-21", "2018-06-22", "2018-06-25", "2018-06-26", "2018-06-27", "2018-06-29", "2018-07-02", "2018-07-04", "2018-07-06", "2018-07-09", "2018-07-12", "2018-07-13", "2018-07-16", "2018-07-17", "2018-07-18", "2018-07-19", "2018-07-20", "2018-07-23", "2018-07-24", "2018-07-25", "2018-07-26", "2018-07-27", "2018-07-30", "2018-07-31", "2018-08-01", "2018-08-02", "2018-08-03", "2018-08-06", "2018-08-07", "2018-08-09", "2018-08-10", "2018-08-13", "2018-08-14", "2018-08-15", "2018-08-16", "2018-08-17", "2018-08-20", "2018-08-23", "2018-08-24", "2018-08-27", "2018-08-28", "2018-08-29", "2018-08-30", "2018-08-31", "2018-09-04", "2018-09-05", "2018-09-07", "2018-09-10", "2018-09-11", "2018-09-14", "2018-09-18", "2018-09-20", "2018-09-25", "2018-09-28", "2018-10-08", "2018-10-09", "2018-10-10", "2018-10-11", "2018-10-12", "2018-10-15", "2018-10-17", "2018-10-18", "2018-10-19", "2018-10-22", "2018-10-23", "2018-10-24", "2018-10-26", "2018-10-30", "2018-10-31", "2018-11-01", "2018-11-05", "2018-11-06", "2018-11-08", "2018-11-09", "2018-11-12", "2018-11-16", "2018-11-22", "2018-11-23", "2018-11-26", "2018-11-27", "2018-11-28", "2018-11-29", "2018-11-30", "2018-12-03", "2018-12-05", "2018-12-07", "2018-12-11", "2018-12-12", "2018-12-13", "2018-12-14", "2018-12-19", "2018-12-20", "2018-12-25", "2018-12-26", "2019-01-02", "2019-01-03", "2019-01-04", "2019-01-07", "2019-01-08", "2019-01-09", "2019-01-11", "2019-01-16", "2019-01-17", "2019-01-18", "2019-01-21", "2019-01-22", "2019-01-23", "2019-01-24", "2019-01-25", "2019-01-28", "2019-01-30", "2019-01-31", "2019-02-01", "2019-02-11", "2019-02-13", "2019-02-15", "2019-02-18", "2019-02-21", "2019-02-22", "2019-02-25", "2019-02-26", "2019-02-27", "2019-02-28", "2019-03-01", "2019-03-05", "2019-03-06", "2019-03-07", "2019-03-08", "2019-03-14", "2019-03-15", "2019-03-18", "2019-03-19", "2019-03-22", "2019-03-27", "2019-03-28", "2019-04-04", "2019-04-08", "2019-04-09", "2019-04-11", "2019-04-15", "2019-04-16", "2019-04-17", "2019-04-18", "2019-04-19", "2019-04-22", "2019-04-23", "2019-04-24", "2019-04-25", "2019-04-26", "2019-04-30", "2019-05-07", "2019-05-08", "2019-05-09", "2019-05-10", "2019-05-14", "2019-05-15", "2019-05-16", "2019-05-17", "2019-05-21", "2019-05-22", "2019-05-23", "2019-05-27", "2019-05-28", "2019-05-29", "2019-05-30", "2019-05-31", "2019-06-03", "2019-06-05", "2019-06-10", "2019-06-12", "2019-06-14", "2019-06-17", "2019-06-18", "2019-06-20", "2019-06-21", "2019-06-26", "2019-06-27", "2019-06-28", "2019-07-03", "2019-07-04", "2019-07-08", "2019-07-09", "2019-07-10", "2019-07-11", "2019-07-15", "2019-07-16", "2019-07-17", "2019-07-18", "2019-07-22", "2019-07-29", "2019-07-30", "2019-07-31", "2019-08-01", "2019-08-02", "2019-08-05", "2019-08-06", "2019-08-07", "2019-08-13", "2019-08-15", "2019-08-21", "2019-08-22", "2019-08-23", "2019-08-26", "2019-08-27", "2019-08-28", "2019-08-29", "2019-09-02", "2019-09-03", "2019-09-04", "2019-09-05", "2019-09-09", "2019-09-10", "2019-09-12", "2019-09-16", "2019-09-17", "2019-09-18", "2019-09-20", "2019-09-23", "2019-09-24", "2019-09-26", "2019-09-30", "2019-10-09", "2019-10-10", "2019-10-11", "2019-10-15", "2019-10-16", "2019-10-17", "2019-10-18", "2019-10-22", "2019-10-23", "2019-10-24", "2019-10-25", "2019-10-28", "2019-10-30", "2019-10-31", "2019-11-01", "2019-11-04", "2019-11-05", "2019-11-06", "2019-11-07", "2019-11-08", "2019-11-12", "2019-11-13", "2019-11-14", "2019-11-15", "2019-11-18", "2019-11-19", "2019-11-21", "2019-11-22", "2019-11-25", "2019-11-26", "2019-11-27", "2019-11-28", "2019-11-29", "2019-12-02", "2019-12-03", "2019-12-05", "2019-12-06", "2019-12-09", "2019-12-10", "2019-12-11", "2019-12-12", "2019-12-13", "2019-12-16", "2019-12-18", "2019-12-20", "2019-12-24", "2019-12-25", "2019-12-26", "2019-12-27", "2019-12-30", "2019-12-31", "2020-01-02", "2020-01-03", "2020-01-07", "2020-01-08", "2020-01-09", "2020-01-10", "2020-01-15", "2020-01-17", "2020-01-20", "2020-01-21", "2020-01-22", "2020-01-23", "2020-02-04", "2020-02-05", "2020-02-06", "2020-02-10", "2020-02-11", "2020-02-12", "2020-02-13", "2020-02-14", "2020-02-17", "2020-02-19", "2020-02-20", "2020-02-21", "2020-02-24", "2020-02-27", "2020-02-28", "2020-03-02", "2020-03-04", "2020-03-06", "2020-03-10", "2020-03-11", "2020-03-13", "2020-03-16", "2020-03-18", "2020-03-19", "2020-03-20", "2020-03-23", "2020-03-24", "2020-03-26", "2020-03-27", "2020-03-30", "2020-04-01", "2020-04-02", "2020-04-03", "2020-04-07", "2020-04-08", "2020-04-10", "2020-04-13", "2020-04-14", "2020-04-15", "2020-04-16", "2020-04-20", "2020-04-22", "2020-04-23", "2020-04-27", "2020-04-29", "2020-04-30", "2020-05-06", "2020-05-07", "2020-05-08", "2020-05-12", "2020-05-14", "2020-05-15", "2020-05-19", "2020-05-20", "2020-05-21", "2020-05-22", "2020-05-25", "2020-05-26", "2020-05-28", "2020-05-29", "2020-06-02", "2020-06-03", "2020-06-04", "2020-06-05", "2020-06-08", "2020-06-11", "2020-06-12", "2020-06-16", "2020-06-18", "2020-06-23", "2020-06-24", "2020-06-29", "2020-06-30", "2020-07-01", "2020-07-02", "2020-07-03", "2020-07-06", "2020-07-08", "2020-07-09", "2020-07-10", "2020-07-14", "2020-07-15", "2020-07-16", "2020-07-17", "2020-07-20", "2020-07-21", "2020-07-22", "2020-07-23", "2020-07-29", "2020-07-30", "2020-08-04", "2020-08-05", "2020-08-06", "2020-08-07", "2020-08-10", "2020-08-11", "2020-08-13", "2020-08-14", "2020-08-17", "2020-08-18", "2020-08-19", "2020-08-20", "2020-08-21", "2020-08-24", "2020-08-25", "2020-08-26"]
let testData = [[31.1, 30.8, 31.1, 30.8], [32.13, 30.85, 32.13, 30.85], [32.52, 31.99, 32.52, 31.99], [32.39, 31.95, 32.39, 31.95], [32.12, 31.53, 32.12, 31.53], [31.84, 30.74, 31.84, 30.74], [31.13, 30.32, 31.13, 30.32], [30.96, 29.8, 30.96, 29.8], [31.35, 30.36, 31.35, 30.36], [32.09, 31.38, 32.09, 31.38], [31.83, 31.3, 31.83, 31.3], [32.8, 31.72, 32.8, 31.72], [32.04, 31.61, 32.04, 31.61], [31.72, 31.04, 31.72, 31.04], [31.46, 30.55, 31.46, 30.55], [31.56, 30.86, 31.56, 30.86], [31.6, 31.04, 31.6, 31.04], [32.77, 31.42, 32.77, 31.42], [32.8, 32.3, 32.8, 32.3], [34.75, 33.55, 34.75, 33.55], [33.96, 33.22, 33.96, 33.22], [35.55, 34.19, 35.55, 34.19], [36.28, 34.52, 36.28, 34.52], [36.47, 35.3, 36.47, 35.3], [36.87, 35.49, 36.87, 35.49], [35.97, 34.99, 35.97, 34.99], [35.56, 34.46, 35.56, 34.46], [35.14, 34.42, 35.14, 34.42], [35.65, 34.83, 35.65, 34.83], [36.09, 35.11, 36.09, 35.11], [36.02, 35.08, 36.02, 35.08], [36.47, 35.39, 36.47, 35.39], [37.26, 35.65, 37.26, 35.65], [37.38, 36.84, 37.38, 36.84], [37.16, 36.22, 37.16, 36.22], [37.58, 36.51, 37.58, 36.51], [37.89, 36.61, 37.89, 36.61], [38.37, 36.96, 38.37, 36.96], [37.9, 36.81, 37.9, 36.81], [38.79, 36.88, 38.79, 36.88], [40.04, 38.08, 40.04, 38.08], [40.31, 38.57, 40.31, 38.57], [39.07, 37.72, 39.07, 37.72], [38.35, 37.42, 38.35, 37.42], [39.0, 38.1, 39.0, 38.1], [39.32, 38.2, 39.32, 38.2], [39.76, 38.84, 39.76, 38.84], [40.24, 39.14, 40.24, 39.14], [39.36, 38.54, 39.36, 38.54], [38.72, 37.15, 38.72, 37.15], [37.9, 36.33, 37.9, 36.33], [38.29, 36.84, 38.29, 36.84], [38.7, 37.91, 38.7, 37.91], [39.59, 37.97, 39.59, 37.97], [40.37, 38.94, 40.37, 38.94], [41.54, 40.33, 41.54, 40.33], [43.73, 40.52, 43.73, 40.52], [43.94, 41.91, 43.94, 41.91], [42.45, 39.95, 42.45, 39.95], [44.25, 41.76, 44.25, 41.76], [45.61, 42.66, 45.61, 42.66], [44.04, 42.04, 44.04, 42.04], [42.86, 41.2, 42.86, 41.2], [43.64, 42.29, 43.64, 42.29], [43.08, 41.92, 43.08, 41.92], [42.37, 40.57, 42.37, 40.57], [41.52, 39.38, 41.52, 39.38], [42.76, 41.29, 42.76, 41.29], [42.93, 41.36, 42.93, 41.36], [43.45, 42.4, 43.45, 42.4], [44.34, 42.77, 44.34, 42.77], [45.71, 43.86, 45.71, 43.86], [44.57, 43.41, 44.57, 43.41], [45.75, 44.41, 45.75, 44.41], [45.09, 43.72, 45.09, 43.72], [45.16, 44.21, 45.16, 44.21], [44.93, 43.87, 44.93, 43.87], [44.36, 43.28, 44.36, 43.28], [44.58, 43.32, 44.58, 43.32], [46.2, 44.39, 46.2, 44.39], [47.48, 45.65, 47.48, 45.65], [47.6, 46.1, 47.6, 46.1], [48.99, 46.48, 48.99, 46.48], [47.78, 46.34, 47.78, 46.34], [47.74, 46.25, 47.74, 46.25], [46.8, 45.2, 46.8, 45.2], [46.55, 44.99, 46.55, 44.99], [47.13, 45.6, 47.13, 45.6], [47.63, 46.25, 47.63, 46.25], [48.34, 47.2, 48.34, 47.2], [47.59, 46.53, 47.59, 46.53], [49.57, 48.43, 49.57, 48.43], [49.19, 47.95, 49.19, 47.95], [48.43, 47.47, 48.43, 47.47], [48.27, 46.22, 48.27, 46.22], [46.3, 44.33, 46.3, 44.33], [46.85, 45.52, 46.85, 45.52], [46.37, 45.1, 46.37, 45.1], [47.47, 46.06, 47.47, 46.06], [46.23, 45.11, 46.23, 45.11], [47.7, 46.11, 47.7, 46.11], [48.97, 47.53, 48.97, 47.53], [49.55, 48.18, 49.55, 48.18], [51.24, 49.76, 51.24, 49.76], [51.14, 49.0, 51.14, 49.0], [52.41, 49.57, 52.41, 49.57], [54.7, 52.23, 54.7, 52.23], [53.73, 52.01, 53.73, 52.01], [52.76, 50.95, 52.76, 50.95], [51.42, 50.19, 51.42, 50.19], [53.47, 50.29, 53.47, 50.29], [56.21, 52.62, 56.21, 52.62], [57.49, 54.67, 57.49, 54.67], [55.21, 53.45, 55.21, 53.45], [55.33, 53.47, 55.33, 53.47], [54.49, 53.35, 54.49, 53.35], [54.56, 53.66, 54.56, 53.66], [53.97, 52.57, 53.97, 52.57], [52.88, 51.28, 52.88, 51.28], [51.57, 50.24, 51.57, 50.24], [53.04, 51.74, 53.04, 51.74], [52.13, 50.62, 52.13, 50.62], [52.29, 50.86, 52.29, 50.86], [53.05, 51.57, 53.05, 51.57], [52.23, 51.0, 52.23, 51.0], [51.47, 50.9, 51.47, 50.9], [51.43, 50.46, 51.43, 50.46], [51.15, 49.76, 51.15, 49.76], [50.56, 48.81, 50.56, 48.81], [49.83, 47.53, 49.83, 47.53], [49.91, 48.91, 49.91, 48.91], [52.66, 51.34, 52.66, 51.34], [53.88, 52.24, 53.88, 52.24], [54.47, 52.45, 54.47, 52.45], [53.18, 52.15, 53.18, 52.15], [54.61, 53.4, 54.61, 53.4], [53.88, 52.91, 53.88, 52.91], [54.75, 53.35, 54.75, 53.35], [54.47, 52.76, 54.47, 52.76], [54.88, 53.25, 54.88, 53.25], [56.96, 55.35, 56.96, 55.35], [57.1, 55.89, 57.1, 55.89], [56.46, 54.18, 56.46, 54.18], [55.12, 53.66, 55.12, 53.66], [55.74, 53.81, 55.74, 53.81], [57.08, 54.99, 57.08, 54.99], [56.02, 54.38, 56.02, 54.38], [55.31, 54.14, 55.31, 54.14], [55.93, 54.61, 55.93, 54.61], [57.57, 55.6, 57.57, 55.6], [57.41, 54.97, 57.41, 54.97], [58.88, 55.8, 58.88, 55.8], [59.82, 57.87, 59.82, 57.87], [62.39, 59.93, 62.39, 59.93], [63.51, 61.07, 63.51, 61.07], [65.6, 62.49, 65.6, 62.49], [65.03, 61.53, 65.03, 61.53], [63.77, 60.35, 63.77, 60.35], [65.62, 64.03, 65.62, 64.03], [64.15, 61.92, 64.15, 61.92], [67.24, 63.91, 67.24, 63.91], [65.52, 61.54, 65.52, 61.54], [66.91, 62.67, 66.91, 62.67], [67.13, 63.12, 67.13, 63.12], [63.25, 60.26, 63.25, 60.26], [60.93, 57.93, 60.93, 57.93], [61.03, 58.05, 61.03, 58.05], [61.05, 58.74, 61.05, 58.74], [60.12, 57.03, 60.12, 57.03], [58.58, 56.01, 58.58, 56.01], [59.93, 56.52, 59.93, 56.52], [61.21, 58.7, 61.21, 58.7], [60.31, 57.17, 60.31, 57.17], [58.09, 55.84, 58.09, 55.84], [60.59, 57.93, 60.59, 57.93], [62.52, 59.59, 62.52, 59.59], [63.4, 61.25, 63.4, 61.25], [63.63, 61.47, 63.63, 61.47], [64.58, 62.39, 64.58, 62.39], [65.53, 64.04, 65.53, 64.04], [65.04, 62.61, 65.04, 62.61], [64.29, 62.11, 64.29, 62.11], [63.44, 61.49, 63.44, 61.49], [62.68, 60.26, 62.68, 60.26], [63.63, 61.44, 63.63, 61.44], [65.04, 62.09, 65.04, 62.09], [65.36, 62.7, 65.36, 62.7], [66.5, 64.14, 66.5, 64.14], [67.48, 65.53, 67.48, 65.53], [67.63, 66.19, 67.63, 66.19], [68.0, 66.38, 68.0, 66.38], [70.66, 68.0, 70.66, 68.0], [71.47, 68.1, 71.47, 68.1], [70.12, 66.38, 70.12, 66.38], [67.73, 64.94, 67.73, 64.94], [66.73, 64.2, 66.73, 64.2], [67.42, 64.97, 67.42, 64.97], [67.66, 66.02, 67.66, 66.02], [67.2, 64.86, 67.2, 64.86], [65.7, 64.3, 65.7, 64.3], [65.52, 61.83, 65.52, 61.83], [62.92, 60.5, 62.92, 60.5], [63.14, 61.13, 63.14, 61.13], [61.5, 58.42, 61.5, 58.42], [60.42, 58.41, 60.42, 58.41], [58.39, 54.29, 58.39, 54.29], [54.62, 52.35, 54.62, 52.35], [52.67, 50.39, 52.67, 50.39], [56.64, 52.9, 56.64, 52.9], [57.13, 55.12, 57.13, 55.12], [56.66, 55.07, 56.66, 55.07], [59.26, 56.98, 59.26, 56.98], [59.72, 58.31, 59.72, 58.31], [59.45, 57.06, 59.45, 57.06], [59.17, 57.03, 59.17, 57.03], [57.72, 55.84, 57.72, 55.84], [55.7, 53.19, 55.7, 53.19], [55.91, 54.37, 55.91, 54.37], [56.46, 54.67, 56.46, 54.67], [57.73, 56.4, 57.73, 56.4], [57.59, 55.08, 57.59, 55.08], [59.63, 57.65, 59.63, 57.65], [58.6, 57.32, 58.6, 57.32], [57.52, 56.59, 57.52, 56.59], [56.96, 54.21, 56.96, 54.21], [54.08, 51.76, 54.08, 51.76], [54.84, 52.98, 54.84, 52.98], [52.8, 49.68, 52.8, 49.68], [54.67, 50.26, 54.67, 50.26], [55.7, 53.38, 55.7, 53.38], [57.43, 54.14, 57.43, 54.14], [59.36, 57.19, 59.36, 57.19], [60.21, 57.46, 60.21, 57.46], [59.12, 56.8, 59.12, 56.8], [58.41, 56.67, 58.41, 56.67], [57.55, 54.24, 57.55, 54.24], [57.63, 54.76, 57.63, 54.76], [58.88, 56.74, 58.88, 56.74], [57.79, 56.04, 57.79, 56.04], [60.0, 56.45, 60.0, 56.45], [60.02, 58.7, 60.02, 58.7], [59.26, 56.4, 59.26, 56.4], [57.79, 55.18, 57.79, 55.18], [57.92, 55.63, 57.92, 55.63], [58.56, 57.03, 58.56, 57.03], [61.41, 57.57, 61.41, 57.57], [61.99, 60.59, 61.99, 60.59], [62.16, 60.69, 62.16, 60.69], [63.62, 61.98, 63.62, 61.98], [64.26, 62.49, 64.26, 62.49], [63.58, 61.16, 63.58, 61.16], [63.9, 62.2, 63.9, 62.2], [62.61, 60.99, 62.61, 60.99], [63.11, 61.02, 63.11, 61.02], [65.81, 63.91, 65.81, 63.91], [65.02, 62.53, 65.02, 62.53], [66.05, 63.55, 66.05, 63.55], [66.16, 63.91, 66.16, 63.91], [66.6, 64.86, 66.6, 64.86], [66.9, 65.58, 66.9, 65.58], [66.27, 64.46, 66.27, 64.46], [65.63, 63.87, 65.63, 63.87], [65.81, 63.91, 65.81, 63.91], [66.94, 65.81, 66.94, 65.81], [66.67, 63.1, 66.67, 63.1], [64.58, 61.63, 64.58, 61.63], [64.77, 62.11, 64.77, 62.11], [62.86, 61.06, 62.86, 61.06], [64.66, 62.93, 64.66, 62.93], [64.25, 60.66, 64.25, 60.66], [61.33, 58.31, 61.33, 58.31], [58.6, 56.03, 58.6, 56.03], [58.98, 56.13, 58.98, 56.13], [56.76, 52.71, 56.76, 52.71], [54.41, 51.36, 54.41, 51.36], [55.35, 52.91, 55.35, 52.91], [56.6, 55.08, 56.6, 55.08], [57.64, 55.56, 57.64, 55.56], [58.01, 56.48, 58.01, 56.48], [57.14, 54.7, 57.14, 54.7], [56.21, 54.34, 56.21, 54.34], [55.24, 54.2, 55.24, 54.2], [54.88, 52.98, 54.88, 52.98], [54.67, 52.93, 54.67, 52.93], [55.86, 53.35, 55.86, 53.35], [56.04, 54.82, 56.04, 54.82], [55.48, 54.33, 55.48, 54.33], [55.09, 53.69, 55.09, 53.69], [54.51, 53.22, 54.51, 53.22], [54.02, 53.13, 54.02, 53.13], [53.72, 51.37, 53.72, 51.37], [51.6, 48.13, 51.6, 48.13], [49.37, 47.21, 49.37, 47.21], [47.89, 45.39, 47.89, 45.39], [48.13, 46.44, 48.13, 46.44], [47.77, 45.44, 47.77, 45.44], [48.79, 46.61, 48.79, 46.61], [46.94, 45.52, 46.94, 45.52], [47.46, 46.54, 47.46, 46.54], [47.2, 44.81, 47.2, 44.81], [45.29, 43.04, 45.29, 43.04], [44.1, 42.5, 44.1, 42.5], [43.75, 42.19, 43.75, 42.19], [45.7, 44.33, 45.7, 44.33], [44.99, 43.1, 44.99, 43.1], [45.88, 44.18, 45.88, 44.18], [45.75, 43.86, 45.75, 43.86], [44.46, 43.26, 44.46, 43.26], [44.42, 43.12, 44.42, 43.12], [43.05, 41.63, 43.05, 41.63], [42.29, 41.12, 42.29, 41.12], [42.0, 40.74, 42.0, 40.74], [41.04, 39.31, 41.04, 39.31], [40.34, 39.04, 40.34, 39.04], [40.56, 39.47, 40.56, 39.47], [40.37, 38.85, 40.37, 38.85], [41.29, 38.96, 41.29, 38.96], [44.08, 42.88, 44.08, 42.88], [45.9, 44.29, 45.9, 44.29], [46.64, 45.77, 46.64, 45.77], [45.25, 43.14, 45.25, 43.14], [44.01, 43.07, 44.01, 43.07], [43.64, 40.35, 43.64, 40.35], [41.19, 38.49, 41.19, 38.49], [42.46, 39.91, 42.46, 39.91], [42.75, 40.62, 42.75, 40.62], [41.83, 40.55, 41.83, 40.55], [40.74, 38.87, 40.74, 38.87], [42.06, 39.26, 42.06, 39.26], [45.42, 42.43, 45.42, 42.43], [44.94, 40.54, 44.94, 40.54], [41.0, 38.68, 41.0, 38.68], [38.75, 37.51, 38.75, 37.51], [36.21, 34.53, 36.21, 34.53], [37.1, 35.56, 37.1, 35.56], [38.56, 37.06, 38.56, 37.06], [39.82, 38.05, 39.82, 38.05], [38.31, 36.88, 38.31, 36.88], [38.58, 37.61, 38.58, 37.61], [38.34, 36.94, 38.34, 36.94], [38.11, 36.9, 38.11, 36.9], [39.75, 38.81, 39.75, 38.81], [40.52, 39.55, 40.52, 39.55], [40.1, 38.9, 40.1, 38.9], [39.33, 38.7, 39.33, 38.7], [39.09, 38.32, 39.09, 38.32], [39.5, 38.47, 39.5, 38.47], [39.96, 38.7, 39.96, 38.7], [39.86, 38.5, 39.86, 38.5], [42.17, 40.44, 42.17, 40.44], [43.26, 41.2, 43.26, 41.2], [42.19, 41.07, 42.19, 41.07], [41.64, 40.69, 41.64, 40.69], [42.14, 41.18, 42.14, 41.18], [42.97, 41.86, 42.97, 41.86], [42.79, 41.85, 42.79, 41.85], [42.18, 41.13, 42.18, 41.13], [40.36, 38.97, 40.36, 38.97], [39.58, 38.21, 39.58, 38.21], [39.73, 38.41, 39.73, 38.41], [40.25, 38.6, 40.25, 38.6], [38.61, 36.56, 38.61, 36.56], [37.82, 36.47, 37.82, 36.47], [38.21, 37.32, 38.21, 37.32], [37.82, 36.91, 37.82, 36.91], [38.89, 37.67, 38.89, 37.67], [38.2, 37.4, 38.2, 37.4], [41.05, 39.68, 41.05, 39.68], [40.42, 39.38, 40.42, 39.38], [41.4, 39.99, 41.4, 39.99], [42.44, 41.07, 42.44, 41.07], [41.39, 40.57, 41.39, 40.57], [41.29, 40.54, 41.29, 40.54], [41.34, 40.59, 41.34, 40.59], [42.08, 40.75, 42.08, 40.75], [42.9, 41.66, 42.9, 41.66], [42.54, 40.86, 42.54, 40.86], [41.86, 40.54, 41.86, 40.54], [42.68, 40.96, 42.68, 40.96], [46.68, 41.85, 46.68, 41.85], [47.51, 45.59, 47.51, 45.59], [48.19, 46.15, 48.19, 46.15], [48.49, 46.63, 48.49, 46.63], [49.9, 48.01, 49.9, 48.01], [48.59, 47.44, 48.59, 47.44], [50.97, 49.14, 50.97, 49.14], [50.92, 49.12, 50.92, 49.12], [51.7, 49.17, 51.7, 49.17], [50.71, 48.18, 50.71, 48.18], [52.06, 49.85, 52.06, 49.85], [54.27, 51.89, 54.27, 51.89], [52.37, 51.31, 52.37, 51.31], [51.43, 48.93, 51.43, 48.93], [49.64, 48.01, 49.64, 48.01], [50.84, 48.77, 50.84, 48.77], [52.65, 49.17, 52.65, 49.17], [56.84, 52.76, 56.84, 52.76], [58.1, 55.51, 58.1, 55.51], [61.37, 58.19, 61.37, 58.19], [60.94, 57.61, 60.94, 57.61], [63.26, 59.79, 63.26, 59.79], [66.45, 63.33, 66.45, 63.33], [69.83, 66.44, 69.83, 66.44], [67.01, 65.53, 67.01, 65.53], [70.61, 66.82, 70.61, 66.82], [69.52, 65.23, 69.52, 65.23], [67.12, 64.02, 67.12, 64.02], [67.94, 65.34, 67.94, 65.34], [67.99, 66.61, 67.99, 66.61], [67.8, 66.26, 67.8, 66.26], [69.83, 66.93, 69.83, 66.93], [70.97, 67.16, 70.97, 67.16], [71.29, 68.67, 71.29, 68.67], [70.38, 67.69, 70.38, 67.69], [74.97, 69.73, 74.97, 69.73], [77.57, 73.33, 77.57, 73.33], [73.61, 68.09, 73.61, 68.09], [70.86, 66.99, 70.86, 66.99], [68.81, 63.82, 68.81, 63.82], [70.2, 65.84, 70.2, 65.84], [71.05, 67.41, 71.05, 67.41], [75.38, 69.64, 75.38, 69.64], [79.84, 74.78, 79.84, 74.78], [78.75, 74.2, 78.75, 74.2], [74.78, 70.41, 74.78, 70.41], [73.07, 70.32, 73.07, 70.32], [71.0, 67.87, 71.0, 67.87], [71.09, 67.99, 71.09, 67.99], [71.76, 69.3, 71.76, 69.3], [72.88, 70.32, 72.88, 70.32], [71.77, 68.92, 71.77, 68.92], [70.22, 67.75, 70.22, 67.75], [69.81, 67.05, 69.81, 67.05], [68.17, 65.55, 68.17, 65.55], [66.71, 64.57, 66.71, 64.57], [70.38, 68.23, 70.38, 68.23], [69.93, 67.79, 69.93, 67.79], [68.76, 66.99, 68.76, 66.99], [68.31, 66.44, 68.31, 66.44], [72.69, 68.72, 72.69, 68.72], [73.95, 71.54, 73.95, 71.54], [76.5, 73.61, 76.5, 73.61], [79.2, 74.32, 79.2, 74.32], [79.72, 77.14, 79.72, 77.14], [83.73, 80.4, 83.73, 80.4], [81.35, 77.88, 81.35, 77.88], [82.6, 80.11, 82.6, 80.11], [83.8, 80.5, 83.8, 80.5], [83.29, 80.44, 83.29, 80.44], [84.96, 81.96, 84.96, 81.96], [85.79, 83.41, 85.79, 83.41], [85.28, 81.65, 85.28, 81.65], [82.98, 80.99, 82.98, 80.99], [82.54, 80.97, 82.54, 80.97], [82.76, 80.99, 82.76, 80.99], [82.62, 79.53, 82.62, 79.53], [80.89, 79.24, 80.89, 79.24], [80.0, 77.6, 80.0, 77.6], [79.01, 76.72, 79.01, 76.72], [77.41, 75.71, 77.41, 75.71], [77.3, 74.72, 77.3, 74.72], [76.97, 73.32, 76.97, 73.32], [77.14, 75.53, 77.14, 75.53], [78.08, 76.25, 78.08, 76.25], [82.37, 79.43, 82.37, 79.43], [84.87, 83.41, 84.87, 83.41], [87.05, 83.51, 87.05, 83.51], [89.06, 86.12, 89.06, 86.12], [87.0, 85.21, 87.0, 85.21], [89.09, 86.36, 89.09, 86.36], [89.84, 87.19, 89.84, 87.19], [91.45, 88.49, 91.45, 88.49], [97.26, 93.76, 97.26, 93.76], [96.75, 93.69, 96.75, 93.69], [94.69, 92.13, 94.69, 92.13], [94.71, 92.83, 94.71, 92.83], [94.11, 91.85, 94.11, 91.85], [92.33, 90.41, 92.33, 90.41], [91.54, 85.69, 91.54, 85.69], [87.48, 85.33, 87.48, 85.33], [87.67, 85.42, 87.67, 85.42], [89.42, 86.86, 89.42, 86.86], [89.03, 86.66, 89.03, 86.66], [87.84, 85.93, 87.84, 85.93], [88.33, 86.12, 88.33, 86.12], [88.57, 86.31, 88.57, 86.31], [86.91, 84.0, 86.91, 84.0], [88.01, 85.62, 88.01, 85.62], [85.82, 83.0, 85.82, 83.0], [87.4, 84.93, 87.4, 84.93], [88.09, 86.21, 88.09, 86.21], [86.31, 84.45, 86.31, 84.45], [85.33, 84.32, 85.33, 84.32], [84.72, 83.18, 84.72, 83.18], [84.12, 82.24, 84.12, 82.24], [85.05, 82.64, 85.05, 82.64], [83.35, 80.34, 83.35, 80.34], [82.12, 80.22, 82.12, 80.22], [84.38, 81.88, 84.38, 81.88], [85.38, 83.84, 85.38, 83.84], [88.2, 85.69, 88.2, 85.69], [87.42, 85.43, 87.42, 85.43], [87.99, 86.02, 87.99, 86.02], [86.69, 85.1, 86.69, 85.1], [86.1, 83.67, 86.1, 83.67], [84.41, 83.24, 84.41, 83.24], [85.64, 83.97, 85.64, 83.97], [84.54, 83.1, 84.54, 83.1], [85.42, 83.75, 85.42, 83.75], [86.41, 84.75, 86.41, 84.75], [85.58, 83.94, 85.58, 83.94], [84.23, 82.67, 84.23, 82.67], [85.04, 83.65, 85.04, 83.65], [87.46, 85.23, 87.46, 85.23], [86.86, 82.46, 86.86, 82.46], [83.64, 80.6, 83.64, 80.6], [84.5, 83.06, 84.5, 83.06], [85.5, 83.78, 85.5, 83.78], [85.29, 83.04, 85.29, 83.04], [83.15, 80.17, 83.15, 80.17], [81.56, 80.07, 81.56, 80.07], [80.57, 79.01, 80.57, 79.01], [81.09, 79.95, 81.09, 79.95], [81.84, 80.09, 81.84, 80.09], [82.24, 81.16, 82.24, 81.16], [81.38, 80.25, 81.38, 80.25], [80.93, 79.72, 80.93, 79.72], [80.39, 79.19, 80.39, 79.19], [81.46, 79.88, 81.46, 79.88], [81.57, 80.03, 81.57, 80.03], [82.46, 81.26, 82.46, 81.26], [81.57, 80.7, 81.57, 80.7], [81.42, 80.64, 81.42, 80.64], [81.27, 79.4, 81.27, 79.4], [80.22, 79.17, 80.22, 79.17], [81.44, 80.03, 81.44, 80.03], [85.42, 80.74, 85.42, 80.74], [86.27, 84.83, 86.27, 84.83], [85.52, 82.64, 85.52, 82.64], [86.19, 84.13, 86.19, 84.13], [85.42, 83.65, 85.42, 83.65], [84.81, 83.51, 84.81, 83.51], [87.48, 83.55, 87.48, 83.55], [90.3, 86.21, 90.3, 86.21], [93.4, 90.86, 93.4, 90.86], [92.44, 90.66, 92.44, 90.66], [91.15, 88.88, 91.15, 88.88], [88.88, 85.49, 88.88, 85.49], [86.97, 84.55, 86.97, 84.55], [86.28, 80.57, 86.28, 80.57], [75.33, 73.46, 75.33, 73.46], [73.08, 70.19, 73.08, 70.19], [73.4, 70.92, 73.4, 70.92], [73.96, 71.62, 73.96, 71.62], [77.03, 72.83, 77.03, 72.83], [77.29, 75.18, 77.29, 75.18], [78.81, 75.94, 78.81, 75.94], [77.09, 75.67, 77.09, 75.67], [77.25, 75.92, 77.25, 75.92], [78.91, 76.1, 78.91, 76.1], [81.77, 77.92, 81.77, 77.92], [82.66, 80.54, 82.66, 80.54], [81.46, 79.01, 81.46, 79.01], [79.36, 77.61, 79.36, 77.61], [76.48, 73.22, 76.48, 73.22], [77.21, 73.67, 77.21, 73.67], [78.76, 77.33, 78.76, 77.33], [83.61, 80.25, 83.61, 80.25], [80.41, 76.73, 80.41, 76.73], [82.56, 80.17, 82.56, 80.17], [79.78, 77.64, 79.78, 77.64], [78.4, 72.47, 78.4, 72.47], [74.94, 68.74, 74.94, 68.74], [68.62, 64.07, 68.62, 64.07], [68.82, 66.17, 68.82, 66.17], [67.09, 65.15, 67.09, 65.15], [69.31, 67.08, 69.31, 67.08], [73.81, 70.91, 73.81, 70.91], [75.31, 72.89, 75.31, 72.89], [72.72, 70.91, 72.72, 70.91], [73.8, 71.61, 73.8, 71.61], [73.33, 71.6, 73.33, 71.6], [74.54, 72.93, 74.54, 72.93], [76.37, 74.83, 76.37, 74.83], [75.56, 74.26, 75.56, 74.26], [77.4, 74.81, 77.4, 74.81], [77.49, 75.05, 77.49, 75.05], [78.11, 76.88, 78.11, 76.88], [78.98, 77.39, 78.98, 77.39], [77.52, 75.48, 77.52, 75.48], [78.18, 76.54, 78.18, 76.54], [76.75, 73.1, 76.75, 73.1], [78.51, 76.46, 78.51, 76.46], [78.3, 76.32, 78.3, 76.32], [82.54, 77.72, 82.54, 77.72], [79.33, 77.52, 79.33, 77.52], [78.56, 77.21, 78.56, 77.21], [80.05, 77.6, 80.05, 77.6], [82.24, 78.82, 82.24, 78.82], [83.47, 81.28, 83.47, 81.28], [88.34, 85.89, 88.34, 85.89], [87.75, 84.91, 87.75, 84.91], [89.53, 87.3, 89.53, 87.3], [88.28, 86.41, 88.28, 86.41], [87.99, 86.02, 87.99, 86.02], [86.49, 82.84, 86.49, 82.84], [84.19, 81.96, 84.19, 81.96], [84.54, 82.56, 84.54, 82.56], [84.74, 82.76, 84.74, 82.76], [84.68, 82.34, 84.68, 82.34], [89.43, 86.61, 89.43, 86.61], [87.71, 85.71, 87.71, 85.71], [89.18, 86.85, 89.18, 86.85], [93.1, 87.75, 93.1, 87.75], [95.89, 92.84, 95.89, 92.84], [96.09, 93.43, 96.09, 93.43], [93.82, 91.35, 93.82, 91.35], [92.72, 89.03, 92.72, 89.03], [90.06, 87.79, 90.06, 87.79], [92.34, 88.92, 92.34, 88.92], [93.03, 90.36, 93.03, 90.36], [90.41, 88.68, 90.41, 88.68], [90.73, 89.75, 90.73, 89.75], [98.98, 90.36, 98.98, 90.36], [108.78, 99.74, 108.78, 99.74], [109.9, 104.24, 109.9, 104.24], [112.38, 107.45, 112.38, 107.45], [116.55, 111.01, 116.55, 111.01], [118.01, 113.02, 118.01, 113.02], [123.61, 115.95, 123.61, 115.95], [125.42, 118.51, 125.42, 118.51], [129.57, 121.76, 129.57, 121.76], [124.28, 113.66, 124.28, 113.66], [116.78, 109.83, 116.78, 109.83], [114.56, 105.57, 114.56, 105.57], [115.62, 110.41, 115.62, 110.41], [117.33, 111.66, 117.33, 111.66], [118.9, 114.14, 118.9, 114.14], [118.39, 112.96, 118.39, 112.96], [118.51, 115.55, 118.51, 115.55], [118.03, 115.13, 118.03, 115.13], [117.51, 113.09, 117.51, 113.09], [117.03, 112.62, 117.03, 112.62], [114.08, 107.74, 114.08, 107.74], [111.15, 107.69, 111.15, 107.69], [113.89, 110.61, 113.89, 110.61], [111.83, 108.73, 111.83, 108.73], [116.53, 109.52, 116.53, 109.52], [122.89, 118.39, 122.89, 118.39], [126.41, 120.87, 126.41, 120.87], [129.86, 122.96, 129.86, 122.96], [126.01, 121.39, 126.01, 121.39], [128.74, 124.48, 128.74, 124.48], [129.5, 124.83, 129.5, 124.83], [139.36, 128.95, 139.36, 128.95], [140.0, 135.4, 140.0, 135.4]];
let biData = ["-", "-", 32.52, "-", "-", "-", "-", 29.8, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 36.87, "-", "-", "-", "-", "-", 35.08, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 40.31, "-", "-", "-", "-", "-", "-", "-", "-", 36.33, "-", "-", "-", "-", "-", "-", "-", "-", "-", 45.61, "-", "-", "-", "-", "-", 39.38, "-", "-", "-", "-", "-", "-", 45.75, "-", "-", "-", 43.28, "-", "-", "-", "-", 48.99, "-", "-", "-", 44.99, "-", "-", "-", "-", 49.57, "-", "-", "-", 44.33, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 57.49, "-", "-", "-", "-", "-", "-", 50.24, "-", "-", "-", 53.05, "-", "-", "-", "-", "-", 47.53, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 57.1, "-", "-", "-", "-", "-", 54.14, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 67.24, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 55.84, "-", "-", "-", "-", "-", 65.53, "-", "-", "-", 60.26, "-", "-", "-", "-", "-", "-", "-", "-", 71.47, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 50.39, "-", "-", "-", "-", 59.72, "-", "-", "-", 53.19, "-", "-", "-", "-", 59.63, "-", "-", "-", "-", "-", 49.68, "-", "-", "-", "-", 60.21, "-", "-", "-", "-", "-", "-", "-", "-", "-", 55.18, "-", "-", "-", "-", "-", "-", 64.26, "-", "-", 60.99, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 66.94, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 51.36, "-", "-", "-", 58.01, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 45.39, "-", "-", 48.79, "-", "-", "-", "-", "-", 42.19, "-", "-", 45.88, "-", "-", "-", "-", "-", "-", "-", "-", "-", 38.85, "-", "-", "-", 46.64, "-", "-", "-", 38.49, "-", "-", "-", "-", "-", 45.42, "-", "-", "-", 34.53, "-", "-", "-", "-", "-", "-", "-", "-", 40.52, "-", "-", "-", "-", "-", 38.5, "-", "-", "-", "-", "-", 42.97, "-", "-", "-", "-", "-", "-", "-", 36.47, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 70.61, "-", "-", "-", "-", 66.26, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 79.84, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 64.57, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 85.79, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 73.32, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 97.26, "-", "-", "-", "-", "-", "-", 85.33, "-", "-", "-", "-", "-", 88.57, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 80.22, "-", "-", "-", "-", 87.99, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 79.01, "-", "-", "-", "-", "-", "-", "-", "-", 82.46, "-", "-", "-", 79.17, "-", "-", "-", "-", "-", "-", "-", "-", "-", 93.4, "-", "-", "-", "-", "-", "-", 70.19, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 83.61, "-", "-", "-", "-", "-", 64.07, "-", "-", "-", "-", 75.31, "-", "-", 71.6, "-", "-", "-", "-", "-", "-", 78.98, "-", "-", 73.1, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 89.53, "-", "-", "-", 81.96, "-", "-", "-", "-", "-", "-", "-", "-", 96.09, "-", "-", "-", "-", "-", 88.68, "-", "-", "-", "-", "-", "-", "-", "-", "-", 129.57, "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", 107.69, "-", "-", "-", "-", "-", 129.86, "-", "-", "-", "-", "-"];
let xdData

export default class StockPage extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            code: this.loadStorage("code") !== null &&  this.loadStorage("code") !== "" ? this.loadStorage("code") : "000636",
            times: [],
            valueList: [],
            ma5: [],
            ma10: [],
            ma20: [],
            ma30: [],
            kTitle: "未知",
            type: "day"
        };
        //this.getData(this.state.code, this.state.type);
        this.changeCode = this.changeCode.bind(this)
        this.changeType = this.changeType.bind(this)
    }

    loadStorage(key) {
        let storage=window.localStorage;
        if (storage.hasOwnProperty(key)) {
            console.log(key + ":" + storage[key]);
            return storage[key]
        }
        return null;
    }

    saveStorage(key, value) {
        let storage=window.localStorage;
        storage[key] = value
    }

    getTimes(kList) {
        let times = [];
        kList.forEach((raw) => {
            times.push(raw["time"])
        });
        return times.reverse();
    }

    getValueList(kList) {
        let list = [];
        kList.forEach((raw) => {
            list.push([
                parseFloat(raw["open"]),
                parseFloat(raw["close"]),
                parseFloat(raw["min"]),
                parseFloat(raw["max"])])
        });
        return list.reverse();
    }

    calculateMA(kList, dayCount) {
        let result = [];
        let valueList = this.getValueList(kList);
        for (let i = 0, len = valueList.length; i < len; i++) {
            if (i < dayCount) {
                result.push('-');
                continue;
            }
            let sum = 0;
            for (let j = 0; j < dayCount; j++) {
                sum += valueList[i - j][1];
            }
            result.push(sum / dayCount);
        }
        return result;
    }

    getTimeByType(type) {
        if (type === "week") {
            return moment().add("year", -1).format("yyyyMMDD");
        }
        if (type === "month") {
            return moment().add("year", -2).format("yyyyMMDD");
        }
        return moment().add("month", -6).format("yyyyMMDD");
    }

    async getData(code, type) {
        try {
            let begin = this.getTimeByType(type);
            let response = await fetch(dataUrl+"beginDay="+begin+"&code="+code+"&time="+type,
                {headers:{"Authorization":appCode}});
            let map = await response.json();
            let kList = map["showapi_res_body"]["dataList"];
            this.setState({
                times: this.getTimes(kList),
                valueList: this.getValueList(kList),
                ma5: this.calculateMA(kList, 5),
                ma10: this.calculateMA(kList, 10),
                ma20: this.calculateMA(kList, 20),
                ma30: this.calculateMA(kList, 30),
                kTitle: map["showapi_res_body"]["name"]
            });
        } catch(e) {
            console.log("Oops, error", e);
        }
    }

    changeCode(e) {
        this.setState({
            code: e.target.value
        });
        this.saveStorage("code", e.target.value);
        this.getData(e.target.value, this.state.type)
    }

    changeType(e) {
        this.setState({
            type: e.target.value
        });
        this.getData(this.state.code, e.target.value)
    }

    render(){
        return(
            <div className="StockPage">
                <div className='StockDetail'>
                    <div className="StockCodeInput">
                        股票代码 <input onBlur={this.changeCode} type='text'/>
                        <label><input name="timeType" type="radio" value="day" onClick={this.changeType} defaultChecked="checked"/>日K </label>
                        <label><input name="timeType" type="radio" value="week" onClick={this.changeType}/>周K </label>
                        <label><input name="timeType" type="radio" value="month" onClick={this.changeType}/>月K </label>
                    </div>
                    <div className="ChartColumn">
                        <ReactEcharts className="StockChart" option={this.getOption()} style={{height:'60vh',width:'100vh'}} theme="Imooc"/>
                    </div>
                    <div className="DataColumn">lalala</div>
                </div>
            </div>
        )
    }

    getOption =()=> {
        let option = {
            title: {
                text: this.state.kTitle,
                left: 0
            },
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'cross'
                }
            },
            legend: {
                data: ['K', 'MA5', 'MA10', 'MA20', 'MA30', 'BI']
            },
            grid: {
                left: '10%',
                right: '10%',
                bottom: '15%'
            },
            xAxis: {
                type: 'category',
                data: this.state.times,
                scale: true,
                boundaryGap: false,
                axisLine: {onZero: false},
                splitLine: {show: false},
                splitNumber: 20,
                min: 'dataMin',
                max: 'dataMax'
            },
            yAxis: {
                scale: true,
                splitArea: {
                    show: true
                }
            },
            dataZoom: [
                {
                    type: 'inside',
                    start: 50,
                    end: 100,
                },
                {
                    show: true,
                    type: 'slider',
                    top: '90%',
                    start: 50,
                    end: 100
                }
            ],
            series: [
                {
                    name: 'K',
                    type: 'candlestick',
                    data: this.state.valueList,
                    itemStyle: {
                        color: 'rgba(0,0,0,0)',
                        color0: 'rgba(0,0,0,0)',
                        borderColor: upColor,
                        borderColor0: downColor,
                        borderWidth:1.15
                    },
                    markPoint: {
                        label: {
                            normal: {
                                formatter: function (param) {
                                    return param != null ? Math.round(param.value) : '';
                                }
                            }
                        },
                        data: [
                            {
                                name: 'highest value',
                                type: 'max',
                                valueDim: 'highest'
                            },
                            {
                                name: 'lowest value',
                                type: 'min',
                                valueDim: 'lowest'
                            },
                            {
                                name: 'average value on close',
                                type: 'average',
                                valueDim: 'close'
                            }
                        ],
                        tooltip: {
                            formatter: function (param) {
                                return param.name + '<br>' + (param.data.coord || '');
                            }
                        }
                    },
                    markLine: {
                        symbol: ['none', 'none'],
                        data: [
                            [
                                {
                                    name: 'from lowest to highest',
                                    type: 'min',
                                    valueDim: 'lowest',
                                    symbol: 'circle',
                                    symbolSize: 10,
                                    label: {
                                        show: false
                                    },
                                    emphasis: {
                                        label: {
                                            show: false
                                        }
                                    }
                                },
                                {
                                    type: 'max',
                                    valueDim: 'highest',
                                    symbol: 'circle',
                                    symbolSize: 10,
                                    label: {
                                        show: false
                                    },
                                    emphasis: {
                                        label: {
                                            show: false
                                        }
                                    }
                                }
                            ],
                            {
                                name: 'min line on close',
                                type: 'min',
                                valueDim: 'close'
                            },
                            {
                                name: 'max line on close',
                                type: 'max',
                                valueDim: 'close'
                            }
                        ]
                    }
                },
                {
                    name: 'MA5',
                    type: 'line',
                    data: this.state.ma5,
                    xAxisIndex: 0,
                    smooth: true,
                    lineStyle: {
                        opacity: 0.5
                    },
                    symbolSize: 0.5
                },
                {
                    name: 'MA10',
                    type: 'line',
                    data: this.state.ma10,
                    smooth: true,
                    lineStyle: {
                        opacity: 0.5
                    },
                    symbolSize: 0.5
                },
                {
                    name: 'MA20',
                    type: 'line',
                    data: this.state.ma20,
                    smooth: true,
                    lineStyle: {
                        opacity: 0.5
                    },
                    symbolSize: 0.5
                },
                {
                    name: 'MA30',
                    type: 'line',
                    data: this.state.ma30,
                    smooth: true,
                    lineStyle: {
                        opacity: 0.5
                    },
                    symbolSize: 0.5
                }/*,
                {
                    name: 'BI',
                    type: 'line',
                    data: biData,
                    smooth: false,
                    lineStyle: {
                        opacity: 1,
                        color: 'red'
                    },
                    symbolSize: 0.5,
                    connectNulls: true
                },
                {
                    name: 'XD',
                    type: 'line',
                    data: xdData,
                    smooth: false,
                    lineStyle: {
                        opacity: 1,
                        color: 'blue',
                        type:'dotted'
                    },
                    symbolSize: 0.5,
                    connectNulls: true
                },*/
            ]
        };
        return option
    }
}