{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n// Built-in GEO fixer.\n\n\nvar inner = makeInner();\nvar _default = {\n  /**\r\n   * @param {string} mapName\r\n   * @param {Object} mapRecord {specialAreas, geoJSON}\r\n   * @param {string} nameProperty\r\n   * @return {Object} {regions, boundingRect}\r\n   */\n  load: function (mapName, mapRecord, nameProperty) {\n    var parsed = inner(mapRecord).parsed;\n\n    if (parsed) {\n      return parsed;\n    }\n\n    var specialAreas = mapRecord.specialAreas || {};\n    var geoJSON = mapRecord.geoJSON;\n    var regions; // https://jsperf.com/try-catch-performance-overhead\n\n    try {\n      regions = geoJSON ? parseGeoJson(geoJSON, nameProperty) : [];\n    } catch (e) {\n      throw new Error('Invalid geoJson format\\n' + e.message);\n    }\n\n    fixNanhai(mapName, regions);\n    each(regions, function (region) {\n      var regionName = region.name;\n      fixTextCoord(mapName, region);\n      fixGeoCoord(mapName, region);\n      fixDiaoyuIsland(mapName, region); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        region.transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    });\n    return inner(mapRecord).parsed = {\n      regions: regions,\n      boundingRect: getBoundingRect(regions)\n    };\n  }\n};\n\nfunction getBoundingRect(regions) {\n  var rect;\n\n  for (var i = 0; i < regions.length; i++) {\n    var regionRect = regions[i].getBoundingRect();\n    rect = rect || regionRect.clone();\n    rect.union(regionRect);\n  }\n\n  return rect;\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["D:/code/web/jarvis-web/node_modules/echarts/lib/coord/geo/geoJSONLoader.js"],"names":["_util","require","each","parseGeoJson","_model","makeInner","fixNanhai","fixTextCoord","fixGeoCoord","fixDiaoyuIsland","inner","_default","load","mapName","mapRecord","nameProperty","parsed","specialAreas","geoJSON","regions","e","Error","message","region","regionName","name","specialArea","transformTo","left","top","width","height","boundingRect","getBoundingRect","rect","i","length","regionRect","clone","union","module","exports"],"mappings":"AACA;;;;;;;;;;;;;;;;;;AAmBA,IAAIA,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AAEA,IAAIC,IAAI,GAAGF,KAAK,CAACE,IAAjB;;AAEA,IAAIC,YAAY,GAAGF,OAAO,CAAC,gBAAD,CAA1B;;AAEA,IAAIG,MAAM,GAAGH,OAAO,CAAC,kBAAD,CAApB;;AAEA,IAAII,SAAS,GAAGD,MAAM,CAACC,SAAvB;;AAEA,IAAIC,SAAS,GAAGL,OAAO,CAAC,cAAD,CAAvB;;AAEA,IAAIM,YAAY,GAAGN,OAAO,CAAC,iBAAD,CAA1B;;AAEA,IAAIO,WAAW,GAAGP,OAAO,CAAC,gBAAD,CAAzB;;AAEA,IAAIQ,eAAe,GAAGR,OAAO,CAAC,oBAAD,CAA7B;AAEA;;;;;;;;;;;;;;;;;;AAkBA;;;AACA,IAAIS,KAAK,GAAGL,SAAS,EAArB;AACA,IAAIM,QAAQ,GAAG;AACb;;;;;;AAMAC,EAAAA,IAAI,EAAE,UAAUC,OAAV,EAAmBC,SAAnB,EAA8BC,YAA9B,EAA4C;AAChD,QAAIC,MAAM,GAAGN,KAAK,CAACI,SAAD,CAAL,CAAiBE,MAA9B;;AAEA,QAAIA,MAAJ,EAAY;AACV,aAAOA,MAAP;AACD;;AAED,QAAIC,YAAY,GAAGH,SAAS,CAACG,YAAV,IAA0B,EAA7C;AACA,QAAIC,OAAO,GAAGJ,SAAS,CAACI,OAAxB;AACA,QAAIC,OAAJ,CATgD,CASnC;;AAEb,QAAI;AACFA,MAAAA,OAAO,GAAGD,OAAO,GAAGf,YAAY,CAACe,OAAD,EAAUH,YAAV,CAAf,GAAyC,EAA1D;AACD,KAFD,CAEE,OAAOK,CAAP,EAAU;AACV,YAAM,IAAIC,KAAJ,CAAU,6BAA6BD,CAAC,CAACE,OAAzC,CAAN;AACD;;AAEDhB,IAAAA,SAAS,CAACO,OAAD,EAAUM,OAAV,CAAT;AACAjB,IAAAA,IAAI,CAACiB,OAAD,EAAU,UAAUI,MAAV,EAAkB;AAC9B,UAAIC,UAAU,GAAGD,MAAM,CAACE,IAAxB;AACAlB,MAAAA,YAAY,CAACM,OAAD,EAAUU,MAAV,CAAZ;AACAf,MAAAA,WAAW,CAACK,OAAD,EAAUU,MAAV,CAAX;AACAd,MAAAA,eAAe,CAACI,OAAD,EAAUU,MAAV,CAAf,CAJ8B,CAII;AAClC;;AAEA,UAAIG,WAAW,GAAGT,YAAY,CAACO,UAAD,CAA9B;;AAEA,UAAIE,WAAJ,EAAiB;AACfH,QAAAA,MAAM,CAACI,WAAP,CAAmBD,WAAW,CAACE,IAA/B,EAAqCF,WAAW,CAACG,GAAjD,EAAsDH,WAAW,CAACI,KAAlE,EAAyEJ,WAAW,CAACK,MAArF;AACD;AACF,KAZG,CAAJ;AAaA,WAAOrB,KAAK,CAACI,SAAD,CAAL,CAAiBE,MAAjB,GAA0B;AAC/BG,MAAAA,OAAO,EAAEA,OADsB;AAE/Ba,MAAAA,YAAY,EAAEC,eAAe,CAACd,OAAD;AAFE,KAAjC;AAID;AA1CY,CAAf;;AA6CA,SAASc,eAAT,CAAyBd,OAAzB,EAAkC;AAChC,MAAIe,IAAJ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,OAAO,CAACiB,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,QAAIE,UAAU,GAAGlB,OAAO,CAACgB,CAAD,CAAP,CAAWF,eAAX,EAAjB;AACAC,IAAAA,IAAI,GAAGA,IAAI,IAAIG,UAAU,CAACC,KAAX,EAAf;AACAJ,IAAAA,IAAI,CAACK,KAAL,CAAWF,UAAX;AACD;;AAED,SAAOH,IAAP;AACD;;AAEDM,MAAM,CAACC,OAAP,GAAiB9B,QAAjB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar _util = require(\"zrender/lib/core/util\");\r\n\r\nvar each = _util.each;\r\n\r\nvar parseGeoJson = require(\"./parseGeoJson\");\r\n\r\nvar _model = require(\"../../util/model\");\r\n\r\nvar makeInner = _model.makeInner;\r\n\r\nvar fixNanhai = require(\"./fix/nanhai\");\r\n\r\nvar fixTextCoord = require(\"./fix/textCoord\");\r\n\r\nvar fixGeoCoord = require(\"./fix/geoCoord\");\r\n\r\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Built-in GEO fixer.\r\nvar inner = makeInner();\r\nvar _default = {\r\n  /**\r\n   * @param {string} mapName\r\n   * @param {Object} mapRecord {specialAreas, geoJSON}\r\n   * @param {string} nameProperty\r\n   * @return {Object} {regions, boundingRect}\r\n   */\r\n  load: function (mapName, mapRecord, nameProperty) {\r\n    var parsed = inner(mapRecord).parsed;\r\n\r\n    if (parsed) {\r\n      return parsed;\r\n    }\r\n\r\n    var specialAreas = mapRecord.specialAreas || {};\r\n    var geoJSON = mapRecord.geoJSON;\r\n    var regions; // https://jsperf.com/try-catch-performance-overhead\r\n\r\n    try {\r\n      regions = geoJSON ? parseGeoJson(geoJSON, nameProperty) : [];\r\n    } catch (e) {\r\n      throw new Error('Invalid geoJson format\\n' + e.message);\r\n    }\r\n\r\n    fixNanhai(mapName, regions);\r\n    each(regions, function (region) {\r\n      var regionName = region.name;\r\n      fixTextCoord(mapName, region);\r\n      fixGeoCoord(mapName, region);\r\n      fixDiaoyuIsland(mapName, region); // Some area like Alaska in USA map needs to be tansformed\r\n      // to look better\r\n\r\n      var specialArea = specialAreas[regionName];\r\n\r\n      if (specialArea) {\r\n        region.transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\r\n      }\r\n    });\r\n    return inner(mapRecord).parsed = {\r\n      regions: regions,\r\n      boundingRect: getBoundingRect(regions)\r\n    };\r\n  }\r\n};\r\n\r\nfunction getBoundingRect(regions) {\r\n  var rect;\r\n\r\n  for (var i = 0; i < regions.length; i++) {\r\n    var regionRect = regions[i].getBoundingRect();\r\n    rect = rect || regionRect.clone();\r\n    rect.union(regionRect);\r\n  }\r\n\r\n  return rect;\r\n}\r\n\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}