{"ast":null,"code":"var _jsxFileName = \"/Users/yangcao/WebstormProjects/jarvis-web/src/GubangPage.js\";\nimport React from \"react\";\nimport \"./GubangPage.css\";\nlet listAllUrl = \"https://admin.gbhome.com/api/v4/common/3in1/discovery?pageSize=10\";\nlet zlColorMap = {\n  \"独家研报\": \"tomato\",\n  \"游资锦囊\": \"slateblue\",\n  \"股帮研究院\": \"gold\"\n};\nlet token = \"\";\n\nclass GubangPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  changeToken(event) {\n    token = event.target.value;\n    console.log(token);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"GubangPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"\\u80A1\\u5E2E\\uFF0C\\u9884\\u671F\\u5DEE\\u5C31\\u662F\\u751F\\u4EA7\\u529B\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"TokenBox\",\n      onChange: this.changeToken,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"SubPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(GubangInfoList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass GubangInfoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      page: 1,\n      totalPages: 0,\n      needPre: false,\n      needNext: true,\n      renderDetail: false,\n      detailType: \"\",\n      detailId: \"\",\n      detailData: \"\"\n    };\n    this.getList(this.state.page);\n  }\n\n  async getList(pageNum) {\n    try {\n      let response = await fetch(listAllUrl + \"&pageNum=\" + pageNum);\n      let map = await response.json();\n      this.setState({\n        data: map[\"data\"][\"records\"]\n      });\n      this.setState({\n        totalPages: map[\"pages\"]\n      });\n    } catch (e) {\n      console.log(\"Oops, error\", e);\n    }\n  }\n\n  renderList() {\n    var listElements = [];\n    this.state.data.forEach(record => {\n      let content = record[\"content\"] === \"\" ? record[\"summary\"] : record[\"content\"];\n      listElements.push(React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, record[\"title\"], React.createElement(\"sub\", {\n        style: {\n          color: zlColorMap[record[\"zlName\"]]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, record[\"zlName\"]), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"Snapshot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, content, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }))));\n    });\n    return listElements;\n  }\n\n  async clickDetail(type, id) {\n    try {\n      let response = await fetch(listAllUrl + \"&pageNum=\" + pageNum);\n      let map = await response.json();\n      this.setState({\n        data: map[\"data\"][\"records\"]\n      });\n      this.setState({\n        totalPages: map[\"pages\"]\n      });\n    } catch (e) {\n      console.log(\"Oops, error\", e);\n    }\n\n    this.setState({});\n  }\n\n  renderDetail() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.detailData);\n  }\n\n  nextPage() {\n    let curPage = this.state.page + 1;\n    this.setState({\n      page: curPage\n    });\n    this.getList(curPage);\n    this.refreshPageChanger(curPage);\n  }\n\n  prePage() {\n    let curPage = this.state.page - 1;\n    this.setState({\n      page: curPage\n    });\n    this.getList(curPage);\n    this.refreshPageChanger(curPage);\n  }\n\n  refreshPageChanger(curPage) {\n    if (curPage === 1) {\n      this.setState({\n        needPre: false\n      });\n    } else {\n      this.setState({\n        needPre: true\n      });\n    }\n  }\n\n  renderPageChanger() {\n    let result = [];\n\n    if (this.state.needPre) {\n      result.push(React.createElement(\"button\", {\n        className: \"PageButton\",\n        onClick: () => this.prePage(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"\\u4E0A\\u4E00\\u9875\"));\n    }\n\n    if (this.state.needNext) {\n      result.push(React.createElement(\"button\", {\n        className: \"PageButton\",\n        onClick: () => this.nextPage(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"\\u4E0B\\u4E00\\u9875\"));\n    }\n\n    return result;\n  }\n\n  render() {\n    if (this.state.renderDetail) {\n      return this.renderDetail();\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.renderList(), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"[\\u7B2C\", this.state.page, \"\\u9875] \", this.renderPageChanger()));\n  }\n\n}\n\nexport default GubangPage;","map":{"version":3,"sources":["/Users/yangcao/WebstormProjects/jarvis-web/src/GubangPage.js"],"names":["React","listAllUrl","zlColorMap","token","GubangPage","Component","constructor","props","changeToken","event","target","value","console","log","render","GubangInfoList","state","data","page","totalPages","needPre","needNext","renderDetail","detailType","detailId","detailData","getList","pageNum","response","fetch","map","json","setState","e","renderList","listElements","forEach","record","content","push","color","clickDetail","type","id","nextPage","curPage","refreshPageChanger","prePage","renderPageChanger","result"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./GubangPage.css\"\n\nlet listAllUrl = \"https://admin.gbhome.com/api/v4/common/3in1/discovery?pageSize=10\";\nlet zlColorMap = {\n    \"独家研报\": \"tomato\",\n    \"游资锦囊\": \"slateblue\",\n    \"股帮研究院\": \"gold\"\n};\nlet token = \"\";\n\nclass GubangPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    changeToken(event) {\n        token = event.target.value;\n        console.log(token)\n    }\n\n    render() {\n        return (\n            <div className='GubangPage'>\n                <h2>股帮，预期差就是生产力</h2>\n                <input type=\"text\" className=\"TokenBox\" onChange={this.changeToken}>\n\n                </input>\n                <div className=\"SubPage\">\n                    <GubangInfoList />\n                </div>\n            </div>\n        )\n    }\n}\n\nclass GubangInfoList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            page: 1,\n            totalPages: 0,\n            needPre: false,\n            needNext: true,\n            renderDetail: false,\n            detailType: \"\",\n            detailId: \"\",\n            detailData: \"\"\n        };\n        this.getList(this.state.page)\n    }\n\n    async getList(pageNum) {\n        try {\n            let response = await fetch(listAllUrl+\"&pageNum=\"+pageNum);\n            let map = await response.json();\n            this.setState({data: map[\"data\"][\"records\"]})\n            this.setState({totalPages: map[\"pages\"]})\n        } catch(e) {\n            console.log(\"Oops, error\", e);\n        }\n    }\n\n    renderList() {\n        var listElements=[];\n        this.state.data.forEach((record)=>{\n            let content = record[\"content\"] === \"\" ? record[\"summary\"]: record[\"content\"];\n            listElements.push(\n                <p>\n                    {record[\"title\"]}<sub style={{color: zlColorMap[record[\"zlName\"]]}}>{record[\"zlName\"]}</sub><br/>\n                    <div className='Snapshot'>\n                        {content}<br/>\n                    </div>\n                </p>\n            )\n        });\n        return listElements;\n    }\n\n    async clickDetail(type, id) {\n        try {\n            let response = await fetch(listAllUrl+\"&pageNum=\"+pageNum);\n            let map = await response.json();\n            this.setState({data: map[\"data\"][\"records\"]})\n            this.setState({totalPages: map[\"pages\"]})\n        } catch(e) {\n            console.log(\"Oops, error\", e);\n        }\n        this.setState({\n\n        })\n    }\n\n    renderDetail() {\n        return (<div>\n            {this.state.detailData}\n        </div>)\n    }\n\n    nextPage() {\n        let curPage = this.state.page + 1;\n        this.setState({\n            page: curPage\n        });\n        this.getList(curPage);\n        this.refreshPageChanger(curPage)\n    }\n\n    prePage() {\n        let curPage = this.state.page - 1;\n        this.setState({\n            page: curPage\n        });\n        this.getList(curPage);\n        this.refreshPageChanger(curPage)\n    }\n\n    refreshPageChanger(curPage) {\n        if (curPage === 1) {\n            this.setState({needPre: false})\n        } else {\n            this.setState({needPre: true})\n        }\n    }\n\n    renderPageChanger() {\n        let result = [];\n        if (this.state.needPre) {\n            result.push(<button className=\"PageButton\" onClick={() => this.prePage()}>上一页</button>)\n        }\n        if (this.state.needNext) {\n            result.push(<button className=\"PageButton\" onClick={() => this.nextPage()}>下一页</button>)\n        }\n        return result\n    }\n\n    render() {\n        if (this.state.renderDetail) {\n            return this.renderDetail()\n        }\n        return (\n            <div>\n                {this.renderList()}\n                <div>\n                    [第{this.state.page}页] {this.renderPageChanger()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GubangPage;"]},"metadata":{},"sourceType":"module"}