{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar LegendVisualProvider = require(\"../../visual/LegendVisualProvider\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\n      return encodeHTML(axis.name + ' : ' + val);\n    }).join('<br />');\n  },\n\n  /**\r\n   * @implement\r\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var data = this.getData();\n      var coordSys = this.coordinateSystem;\n      var values = data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }), dataIndex, true);\n\n      for (var i = 0, len = values.length; i < len; i++) {\n        if (!isNaN(values[i])) {\n          var indicatorAxes = coordSys.getIndicatorAxes();\n          return coordSys.coordToPoint(indicatorAxes[i].dataToCoord(values[i]), i);\n        }\n      }\n    }\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;","map":{"version":3,"sources":["D:/code/web/jarvis-web/node_modules/echarts/lib/chart/radar/RadarSeries.js"],"names":["SeriesModel","require","createListSimply","zrUtil","_format","encodeHTML","LegendVisualProvider","RadarSeries","extend","type","dependencies","init","option","superApply","arguments","legendVisualProvider","bind","getData","getRawData","getInitialData","ecModel","generateCoord","generateCoordCount","Infinity","formatTooltip","dataIndex","data","coordSys","coordinateSystem","indicatorAxes","getIndicatorAxes","name","getName","map","axis","idx","val","get","mapDimension","dim","join","getTooltipPosition","values","getValues","dimensions","i","len","length","isNaN","coordToPoint","dataToCoord","defaultOption","zlevel","z","legendHoverLink","radarIndex","lineStyle","width","label","position","symbol","symbolSize","_default","module","exports"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar SeriesModel = require(\"../../model/Series\");\r\n\r\nvar createListSimply = require(\"../helper/createListSimply\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar _format = require(\"../../util/format\");\r\n\r\nvar encodeHTML = _format.encodeHTML;\r\n\r\nvar LegendVisualProvider = require(\"../../visual/LegendVisualProvider\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar RadarSeries = SeriesModel.extend({\r\n  type: 'series.radar',\r\n  dependencies: ['radar'],\r\n  // Overwrite\r\n  init: function (option) {\r\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\r\n    // Use a function instead of direct access because data reference may changed\r\n\r\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\r\n  },\r\n  getInitialData: function (option, ecModel) {\r\n    return createListSimply(this, {\r\n      generateCoord: 'indicator_',\r\n      generateCoordCount: Infinity\r\n    });\r\n  },\r\n  formatTooltip: function (dataIndex) {\r\n    var data = this.getData();\r\n    var coordSys = this.coordinateSystem;\r\n    var indicatorAxes = coordSys.getIndicatorAxes();\r\n    var name = this.getData().getName(dataIndex);\r\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\r\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\r\n      return encodeHTML(axis.name + ' : ' + val);\r\n    }).join('<br />');\r\n  },\r\n\r\n  /**\r\n   * @implement\r\n   */\r\n  getTooltipPosition: function (dataIndex) {\r\n    if (dataIndex != null) {\r\n      var data = this.getData();\r\n      var coordSys = this.coordinateSystem;\r\n      var values = data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\r\n        return data.mapDimension(dim);\r\n      }), dataIndex, true);\r\n\r\n      for (var i = 0, len = values.length; i < len; i++) {\r\n        if (!isNaN(values[i])) {\r\n          var indicatorAxes = coordSys.getIndicatorAxes();\r\n          return coordSys.coordToPoint(indicatorAxes[i].dataToCoord(values[i]), i);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  defaultOption: {\r\n    zlevel: 0,\r\n    z: 2,\r\n    coordinateSystem: 'radar',\r\n    legendHoverLink: true,\r\n    radarIndex: 0,\r\n    lineStyle: {\r\n      width: 2,\r\n      type: 'solid'\r\n    },\r\n    label: {\r\n      position: 'top'\r\n    },\r\n    // areaStyle: {\r\n    // },\r\n    // itemStyle: {}\r\n    symbol: 'emptyCircle',\r\n    symbolSize: 4 // symbolRotate: null\r\n\r\n  }\r\n});\r\nvar _default = RadarSeries;\r\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}