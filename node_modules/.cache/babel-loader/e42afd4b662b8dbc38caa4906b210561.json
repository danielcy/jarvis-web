{"ast":null,"code":"var _jsxFileName = \"/Users/yangcao/WebstormProjects/jarvis-web/src/StockPage.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport ReactEcharts from 'echarts-for-react';\nimport './StockPage.css';\nlet upColor = '#ec0000';\nlet downColor = '#00da3c';\nlet dataUrl = \"https://ali-stock.showapi.com/realtime-k?\";\nlet appCode = \"APPCODE 9b138b2dbe0f4ee0a6ec170a0b77ac0e\";\nexport default class StockPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getOption = () => {\n      let option = {\n        title: {\n          text: this.state.kTitle,\n          left: 0\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          }\n        },\n        legend: {\n          data: ['日K', 'MA5', 'MA10', 'MA20', 'MA30']\n        },\n        grid: {\n          left: '10%',\n          right: '10%',\n          bottom: '15%'\n        },\n        xAxis: {\n          type: 'category',\n          data: this.state.times,\n          scale: true,\n          boundaryGap: false,\n          axisLine: {\n            onZero: false\n          },\n          splitLine: {\n            show: false\n          },\n          splitNumber: 20,\n          min: 'dataMin',\n          max: 'dataMax'\n        },\n        yAxis: {\n          scale: true,\n          splitArea: {\n            show: true\n          }\n        },\n        dataZoom: [{\n          type: 'inside',\n          start: 50,\n          end: 100\n        }, {\n          show: true,\n          type: 'slider',\n          top: '90%',\n          start: 50,\n          end: 100\n        }],\n        series: [{\n          name: '日K',\n          type: 'candlestick',\n          data: this.state.valueList,\n          itemStyle: {\n            color: 'rgba(0,0,0,0)',\n            color0: 'rgba(0,0,0,0)',\n            borderColor: upColor,\n            borderColor0: downColor,\n            borderWidth: 1.15\n          },\n          markPoint: {\n            label: {\n              normal: {\n                formatter: function (param) {\n                  return param != null ? Math.round(param.value) : '';\n                }\n              }\n            },\n            data: [{\n              name: 'highest value',\n              type: 'max',\n              valueDim: 'highest'\n            }, {\n              name: 'lowest value',\n              type: 'min',\n              valueDim: 'lowest'\n            }, {\n              name: 'average value on close',\n              type: 'average',\n              valueDim: 'close'\n            }],\n            tooltip: {\n              formatter: function (param) {\n                return param.name + '<br>' + (param.data.coord || '');\n              }\n            }\n          },\n          markLine: {\n            symbol: ['none', 'none'],\n            data: [[{\n              name: 'from lowest to highest',\n              type: 'min',\n              valueDim: 'lowest',\n              symbol: 'circle',\n              symbolSize: 10,\n              label: {\n                show: false\n              },\n              emphasis: {\n                label: {\n                  show: false\n                }\n              }\n            }, {\n              type: 'max',\n              valueDim: 'highest',\n              symbol: 'circle',\n              symbolSize: 10,\n              label: {\n                show: false\n              },\n              emphasis: {\n                label: {\n                  show: false\n                }\n              }\n            }], {\n              name: 'min line on close',\n              type: 'min',\n              valueDim: 'close'\n            }, {\n              name: 'max line on close',\n              type: 'max',\n              valueDim: 'close'\n            }]\n          }\n        }, {\n          name: 'MA5',\n          type: 'line',\n          data: this.state.ma5,\n          smooth: true,\n          lineStyle: {\n            opacity: 0.5\n          },\n          symbolSize: 0.5\n        }, {\n          name: 'MA10',\n          type: 'line',\n          data: this.state.ma10,\n          smooth: true,\n          lineStyle: {\n            opacity: 0.5\n          },\n          symbolSize: 0.5\n        }, {\n          name: 'MA20',\n          type: 'line',\n          data: this.state.ma20,\n          smooth: true,\n          lineStyle: {\n            opacity: 0.5\n          },\n          symbolSize: 0.5\n        }, {\n          name: 'MA30',\n          type: 'line',\n          data: this.state.ma30,\n          smooth: true,\n          lineStyle: {\n            opacity: 0.5\n          },\n          symbolSize: 0.5\n        }]\n      };\n      return option;\n    };\n\n    this.state = {\n      code: \"000636\",\n      times: [],\n      valueList: [],\n      ma5: [],\n      ma10: [],\n      ma20: [],\n      ma30: [],\n      kTitle: \"未知\"\n    };\n    this.getData(\"000636\", \"day\");\n  }\n\n  getTimes(kList) {\n    let times = [];\n    kList.forEach(raw => {\n      times.push(raw[\"time\"]);\n    });\n    return times.reverse();\n  }\n\n  getValueList(kList) {\n    let list = [];\n    kList.forEach(raw => {\n      list.push([raw[\"open\"], raw[\"close\"], raw[\"min\"], raw[\"max\"]]);\n    });\n    return list.reverse();\n  }\n\n  calculateMA(kList, dayCount) {\n    let result = [];\n    let valueList = this.getValueList(kList);\n\n    for (let i = 0, len = valueList.length; i < len; i++) {\n      if (i < dayCount) {\n        result.push('-');\n        continue;\n      }\n\n      let sum = 0;\n\n      for (let j = 0; j < dayCount; j++) {\n        sum += valueList[i - j][1];\n      }\n\n      result.push(sum / dayCount);\n    }\n\n    console.log(result);\n    return result;\n  }\n\n  async getData(code, type) {\n    try {\n      let begin = moment().add(\"month\", -6).format(\"yyyyMMDD\");\n      let response = await fetch(dataUrl + \"beginDay=\" + begin + \"&code=\" + code + \"&time=\" + type, {\n        headers: {\n          \"Authorization\": appCode\n        }\n      });\n      let map = await response.json();\n      let kList = map[\"showapi_res_body\"][\"dataList\"];\n      this.setState({\n        times: this.getTimes(kList),\n        valueList: this.getValueList(kList),\n        ma5: this.calculateMA(kList, 5),\n        ma10: this.calculateMA(kList, 10),\n        ma20: this.calculateMA(kList, 20),\n        ma30: this.calculateMA(kList, 30),\n        kTitle: map[\"showapi_res_body\"][\"name\"]\n      });\n    } catch (e) {\n      console.log(\"Oops, error\", e);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"StockDetailPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"StockChart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(ReactEcharts, {\n      option: this.getOption(),\n      theme: \"Imooc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/yangcao/WebstormProjects/jarvis-web/src/StockPage.js"],"names":["React","moment","ReactEcharts","upColor","downColor","dataUrl","appCode","StockPage","Component","constructor","props","getOption","option","title","text","state","kTitle","left","tooltip","trigger","axisPointer","type","legend","data","grid","right","bottom","xAxis","times","scale","boundaryGap","axisLine","onZero","splitLine","show","splitNumber","min","max","yAxis","splitArea","dataZoom","start","end","top","series","name","valueList","itemStyle","color","color0","borderColor","borderColor0","borderWidth","markPoint","label","normal","formatter","param","Math","round","value","valueDim","coord","markLine","symbol","symbolSize","emphasis","ma5","smooth","lineStyle","opacity","ma10","ma20","ma30","code","getData","getTimes","kList","forEach","raw","push","reverse","getValueList","list","calculateMA","dayCount","result","i","len","length","sum","j","console","log","begin","add","format","response","fetch","headers","map","json","setState","e","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport ReactEcharts from 'echarts-for-react';\nimport './StockPage.css'\n\nlet upColor = '#ec0000';\nlet downColor = '#00da3c';\n\nlet dataUrl = \"https://ali-stock.showapi.com/realtime-k?\";\nlet appCode = \"APPCODE 9b138b2dbe0f4ee0a6ec170a0b77ac0e\";\n\nexport default class StockPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            code: \"000636\",\n            times: [],\n            valueList: [],\n            ma5: [],\n            ma10: [],\n            ma20: [],\n            ma30: [],\n            kTitle: \"未知\"\n        };\n        this.getData(\"000636\", \"day\")\n    }\n\n    getTimes(kList) {\n        let times = [];\n        kList.forEach((raw) => {\n            times.push(raw[\"time\"])\n        });\n        return times.reverse();\n    }\n\n    getValueList(kList) {\n        let list = [];\n        kList.forEach((raw) => {\n            list.push([raw[\"open\"],raw[\"close\"],raw[\"min\"],raw[\"max\"]])\n        });\n        return list.reverse();\n    }\n\n    calculateMA(kList, dayCount) {\n        let result = [];\n        let valueList = this.getValueList(kList);\n        for (let i = 0, len = valueList.length; i < len; i++) {\n            if (i < dayCount) {\n                result.push('-');\n                continue;\n            }\n            let sum = 0;\n            for (let j = 0; j < dayCount; j++) {\n                sum += valueList[i - j][1];\n            }\n            result.push(sum / dayCount);\n        }\n        console.log(result);\n        return result;\n    }\n\n    async getData(code, type) {\n        try {\n            let begin = moment().add(\"month\", -6).format(\"yyyyMMDD\");\n            let response = await fetch(dataUrl+\"beginDay=\"+begin+\"&code=\"+code+\"&time=\"+type,\n                {headers:{\"Authorization\":appCode}});\n            let map = await response.json();\n            let kList = map[\"showapi_res_body\"][\"dataList\"];\n            this.setState({\n                times: this.getTimes(kList),\n                valueList: this.getValueList(kList),\n                ma5: this.calculateMA(kList, 5),\n                ma10: this.calculateMA(kList, 10),\n                ma20: this.calculateMA(kList, 20),\n                ma30: this.calculateMA(kList, 30),\n                kTitle: map[\"showapi_res_body\"][\"name\"]\n            });\n        } catch(e) {\n            console.log(\"Oops, error\", e);\n        }\n    }\n\n    render(){\n        return(\n            <div className='StockDetailPage'>\n                <div className=\"StockChart\">\n                    <ReactEcharts option={this.getOption()} theme=\"Imooc\"/>\n                </div>\n            </div>\n        )\n    }\n\n    getOption =()=> {\n        let option = {\n            title: {\n                text: this.state.kTitle,\n                left: 0\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    type: 'cross'\n                }\n            },\n            legend: {\n                data: ['日K', 'MA5', 'MA10', 'MA20', 'MA30']\n            },\n            grid: {\n                left: '10%',\n                right: '10%',\n                bottom: '15%'\n            },\n            xAxis: {\n                type: 'category',\n                data: this.state.times,\n                scale: true,\n                boundaryGap: false,\n                axisLine: {onZero: false},\n                splitLine: {show: false},\n                splitNumber: 20,\n                min: 'dataMin',\n                max: 'dataMax'\n            },\n            yAxis: {\n                scale: true,\n                splitArea: {\n                    show: true\n                }\n            },\n            dataZoom: [\n                {\n                    type: 'inside',\n                    start: 50,\n                    end: 100\n                },\n                {\n                    show: true,\n                    type: 'slider',\n                    top: '90%',\n                    start: 50,\n                    end: 100\n                }\n            ],\n            series: [\n                {\n                    name: '日K',\n                    type: 'candlestick',\n                    data: this.state.valueList,\n                    itemStyle: {\n                        color: 'rgba(0,0,0,0)',\n                        color0: 'rgba(0,0,0,0)',\n                        borderColor: upColor,\n                        borderColor0: downColor,\n                        borderWidth:1.15\n                    },\n                    markPoint: {\n                        label: {\n                            normal: {\n                                formatter: function (param) {\n                                    return param != null ? Math.round(param.value) : '';\n                                }\n                            }\n                        },\n                        data: [\n                            {\n                                name: 'highest value',\n                                type: 'max',\n                                valueDim: 'highest'\n                            },\n                            {\n                                name: 'lowest value',\n                                type: 'min',\n                                valueDim: 'lowest'\n                            },\n                            {\n                                name: 'average value on close',\n                                type: 'average',\n                                valueDim: 'close'\n                            }\n                        ],\n                        tooltip: {\n                            formatter: function (param) {\n                                return param.name + '<br>' + (param.data.coord || '');\n                            }\n                        }\n                    },\n                    markLine: {\n                        symbol: ['none', 'none'],\n                        data: [\n                            [\n                                {\n                                    name: 'from lowest to highest',\n                                    type: 'min',\n                                    valueDim: 'lowest',\n                                    symbol: 'circle',\n                                    symbolSize: 10,\n                                    label: {\n                                        show: false\n                                    },\n                                    emphasis: {\n                                        label: {\n                                            show: false\n                                        }\n                                    }\n                                },\n                                {\n                                    type: 'max',\n                                    valueDim: 'highest',\n                                    symbol: 'circle',\n                                    symbolSize: 10,\n                                    label: {\n                                        show: false\n                                    },\n                                    emphasis: {\n                                        label: {\n                                            show: false\n                                        }\n                                    }\n                                }\n                            ],\n                            {\n                                name: 'min line on close',\n                                type: 'min',\n                                valueDim: 'close'\n                            },\n                            {\n                                name: 'max line on close',\n                                type: 'max',\n                                valueDim: 'close'\n                            }\n                        ]\n                    }\n                },\n                {\n                    name: 'MA5',\n                    type: 'line',\n                    data: this.state.ma5,\n                    smooth: true,\n                    lineStyle: {\n                        opacity: 0.5\n                    },\n                    symbolSize: 0.5\n                },\n                {\n                    name: 'MA10',\n                    type: 'line',\n                    data: this.state.ma10,\n                    smooth: true,\n                    lineStyle: {\n                        opacity: 0.5\n                    },\n                    symbolSize: 0.5\n                },\n                {\n                    name: 'MA20',\n                    type: 'line',\n                    data: this.state.ma20,\n                    smooth: true,\n                    lineStyle: {\n                        opacity: 0.5\n                    },\n                    symbolSize: 0.5\n                },\n                {\n                    name: 'MA30',\n                    type: 'line',\n                    data: this.state.ma30,\n                    smooth: true,\n                    lineStyle: {\n                        opacity: 0.5\n                    },\n                    symbolSize: 0.5\n                },\n\n            ]\n        };\n        return option\n    }\n}"]},"metadata":{},"sourceType":"module"}