{"ast":null,"code":"var _jsxFileName = \"/Users/yangcao/WebstormProjects/jarvis-web/src/QuantificationPage.js\";\nimport React from \"react\";\nimport \"./QuantificationPage.css\";\nimport Datetime from 'react-datetime';\nimport \"react-datetime/css/react-datetime.css\";\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nlet host = \"http://127.0.0.1:8000\"; // let host = \"http://118.25.41.14:8091\";\n\nclass QuantificationPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"QuantificationPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"\\u91CF\\u5316\\u5C0F\\u5E73\\u53F0\"), React.createElement(SelectorTool, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass SelectorTool extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ts: new Date().getTime(),\n      selector_list: [],\n      current_selector: \"\",\n      launched: false,\n      launched_id: 0,\n      result: []\n    };\n    this.dateOnChange = this.dateOnChange.bind(this);\n    this.getSelectors = this.getSelectors.bind(this);\n    this.changeSelector = this.changeSelector.bind(this);\n    this.launchSelectors = this.launchSelectors.bind(this);\n    this.getResults = this.getResults.bind(this);\n    this.getSelectors();\n  }\n\n  dateOnChange(e) {\n    this.setState({\n      ts: e.valueOf() / 1000\n    });\n  }\n\n  async getSelectors() {\n    try {\n      let uri = \"/selector/get_selectors\";\n      let response = await fetch(host + uri);\n      let map = await response.json();\n      this.setState({\n        selector_list: map['result']\n      });\n    } catch (e) {\n      console.log(\"Oops, error\", e);\n    }\n  }\n\n  async launchSelectors() {\n    try {\n      let uri = \"/selector/launch\";\n      let response = await fetch(host + uri, {\n        method: 'POST',\n        body: JSON.stringify({\n          \"name\": this.state.current_selector,\n          \"ts\": this.state.ts\n        })\n      });\n      let map = await response.json();\n      this.setState({\n        launch_id: map['result'],\n        launched: true\n      });\n    } catch (e) {\n      console.log(\"Oops, error\", e);\n    }\n  }\n\n  async getResults() {\n    try {\n      let uri = \"/selector/get_result\";\n      let response = await fetch(host + uri, {\n        method: 'POST',\n        body: JSON.stringify({\n          \"id\": this.state.launch_id\n        })\n      });\n      let map = await response.json();\n      this.setState({\n        result: map['result']\n      });\n    } catch (e) {\n      console.log(\"Oops, error\", e);\n    }\n  }\n\n  changeSelector(e) {\n    this.setState({\n      current_selector: e.target.value\n    });\n  }\n\n  renderResult() {\n    if (this.state.launched) {\n      return \"正在运行中，请稍等...\";\n    } else if (this.state.result.length > 0) {\n      return this.state.result.map(code => {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, code);\n      });\n    } else {\n      return \"尚未运行\";\n    }\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      // 轮询\n      if (this.state.launched) {\n        this.getResults();\n        let r = this.state.result;\n\n        if (r.length > 0) {\n          this.setState({\n            launched: false\n          });\n        }\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.timer !== null) {\n      clearInterval(this.timer);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"SelectorTool\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"\\u9009\\u80A1\\u5C0F\\u5DE5\\u5177\"), \"\\u65F6\\u95F4: \", React.createElement(Datetime, {\n      locale: \"zh-cn\",\n      dateFormat: \"YYYY-MM-dd\",\n      timeFormat: false,\n      onChange: this.dateOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), \"\\u9009\\u80A1\\u7B56\\u7565:\", React.createElement(\"select\", {\n      onChange: this.changeSelector,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"未选择\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"\\u672A\\u9009\\u62E9\"), this.state.selector_list.map(selector => {\n      return React.createElement(\"option\", {\n        value: selector,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, selector);\n    })), React.createElement(\"button\", {\n      name: \"launch\",\n      onClick: this.launchSelectors,\n      disabled: this.state.launched,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"\\u8FD0\\u884C\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), \"\\u7ED3\\u679C:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), this.renderResult()));\n  }\n\n}\n\nexport default QuantificationPage;","map":{"version":3,"sources":["/Users/yangcao/WebstormProjects/jarvis-web/src/QuantificationPage.js"],"names":["React","Datetime","moment","host","QuantificationPage","Component","constructor","props","render","SelectorTool","state","ts","Date","getTime","selector_list","current_selector","launched","launched_id","result","dateOnChange","bind","getSelectors","changeSelector","launchSelectors","getResults","e","setState","valueOf","uri","response","fetch","map","json","console","log","method","body","JSON","stringify","launch_id","target","value","renderResult","length","code","componentDidMount","timer","setInterval","r","componentWillUnmount","clearInterval","selector"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./QuantificationPage.css\"\nimport Datetime from 'react-datetime';\nimport \"react-datetime/css/react-datetime.css\";\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\n\nlet host = \"http://127.0.0.1:8000\";\n// let host = \"http://118.25.41.14:8091\";\n\nclass QuantificationPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className='QuantificationPage'>\n                <span>\n                    <h2>量化小平台</h2>\n                    <SelectorTool />\n                </span>\n            </div>\n        )\n    }\n}\n\nclass SelectorTool extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ts: new Date().getTime(),\n            selector_list: [],\n            current_selector: \"\",\n            launched: false,\n            launched_id: 0,\n            result: [],\n        };\n        this.dateOnChange = this.dateOnChange.bind(this);\n        this.getSelectors = this.getSelectors.bind(this);\n        this.changeSelector = this.changeSelector.bind(this);\n        this.launchSelectors = this.launchSelectors.bind(this);\n        this.getResults = this.getResults.bind(this);\n        this.getSelectors()\n    }\n\n    dateOnChange(e) {\n        this.setState({\n            ts: e.valueOf()/1000\n        });\n    }\n\n    async getSelectors() {\n        try {\n            let uri = \"/selector/get_selectors\";\n            let response = await fetch(host+uri);\n            let map = await response.json();\n            this.setState({\n                selector_list: map['result']\n            })\n        } catch(e) {\n            console.log(\"Oops, error\", e);\n        }\n    }\n\n    async launchSelectors() {\n        try {\n            let uri = \"/selector/launch\";\n            let response = await fetch(host+uri, {\n                method: 'POST',\n                body: JSON.stringify({\n                    \"name\": this.state.current_selector,\n                    \"ts\": this.state.ts,\n                })\n            });\n            let map = await response.json();\n            this.setState({\n                launch_id: map['result'],\n                launched: true\n            })\n\n        } catch (e) {\n            console.log(\"Oops, error\", e);\n        }\n    }\n\n    async getResults() {\n        try {\n            let uri = \"/selector/get_result\";\n            let response = await fetch(host+uri, {\n                method: 'POST',\n                body: JSON.stringify({\n                    \"id\": this.state.launch_id\n                })\n            });\n            let map = await response.json();\n            this.setState({\n                result: map['result']\n            });\n        } catch (e) {\n            console.log(\"Oops, error\", e);\n        }\n    }\n\n    changeSelector(e) {\n        this.setState({\n            current_selector: e.target.value\n        })\n    }\n\n    renderResult() {\n        if (this.state.launched) {\n            return \"正在运行中，请稍等...\"\n        } else if (this.state.result.length > 0) {\n            return this.state.result.map(code => {\n                return <p>{code}</p>\n            })\n        } else {\n            return \"尚未运行\"\n        }\n    }\n    componentDidMount(){\n        this.timer=setInterval(()=>{ // 轮询\n            if (this.state.launched) {\n                this.getResults();\n                let r = this.state.result;\n                if (r.length > 0) {\n                    this.setState({\n                        launched: false,\n                    })\n                }\n            }\n        },1000)\n    }\n\n    componentWillUnmount(){\n        if(this.timer !== null) {\n            clearInterval(this.timer);\n        }\n    }\n\n    render() {\n        return (\n            <div className='SelectorTool'>\n                <span>\n                    <h3>选股小工具</h3>\n                    时间: <Datetime locale=\"zh-cn\" dateFormat=\"YYYY-MM-dd\" timeFormat={false} onChange={this.dateOnChange}/>\n                    <br/>\n                    选股策略:\n                    <select onChange={this.changeSelector}>\n                        <option value={\"未选择\"}>未选择</option>\n                        {\n                            this.state.selector_list.map(selector => {\n                                return <option value={selector}>{selector}</option>\n                            })\n                        }\n                    </select>\n                    <button name={\"launch\"} onClick={this.launchSelectors} disabled={this.state.launched}>运行</button>\n                    <br/>\n                    <br/>\n                    结果:\n                    <br/>\n                    {this.renderResult()}\n                </span>\n            </div>\n        )\n    }\n}\n\nexport default QuantificationPage;"]},"metadata":{},"sourceType":"module"}