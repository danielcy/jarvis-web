{"ast":null,"code":"var _jsxFileName = \"/Users/yangcao/WebstormProjects/jarvis-web/src/ConfirmationPage.js\";\nimport React from 'react';\nimport \"./ConfirmationPage.css\";\nlet host = \"http://127.0.0.1:8000\"; // let host = \"http://118.25.41.14:8091\";\n\nclass ConfirmationPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmationTemplateFile: null,\n      inputTemplateFile: null\n    };\n    this.uploadConfirmationTemplate = this.uploadConfirmationTemplate.bind(this);\n    this.uploadInputTemplate = this.uploadInputTemplate.bind(this);\n    this.handelMerge = this.handelMerge.bind(this);\n  }\n\n  uploadConfirmationTemplate(e) {\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    reader.parent = this;\n\n    reader.onload = function (e) {\n      this.parent.httpUpload(this.result.split(',')[1], \"/upload_confirmation_template\");\n    };\n\n    reader.readAsDataURL(file);\n    this.setState({\n      confirmationTemplateFile: file\n    });\n  }\n\n  uploadInputTemplate(e) {\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    reader.parent = this;\n\n    reader.onload = function (e) {\n      this.parent.httpUpload(this.result.split(',')[1], \"/upload_input_template\");\n    };\n\n    reader.readAsDataURL(file);\n    this.setState({\n      inputTemplateFile: file\n    });\n  }\n\n  handelMerge() {\n    this.httpExecute(\"/execute_confirmation_merge\");\n  }\n\n  httpUpload(d, uri) {\n    var data = JSON.stringify({\n      \"data\": d\n    });\n    var xhr = new XMLHttpRequest();\n    xhr.withCredentials = true;\n    xhr.addEventListener(\"readystatechange\", function () {\n      if (this.readyState === 4) {\n        alert(\"上传成功！\");\n      }\n    });\n    console.log(host + uri);\n    xhr.open(\"POST\", host + uri);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.send(data);\n  }\n\n  httpExecute(uri) {\n    let xhr = new XMLHttpRequest();\n    xhr.withCredentials = true;\n    xhr.open(\"GET\", host + uri);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.responseType = \"blob\";\n\n    xhr.onload = function (oEvent) {\n      let content = xhr.response;\n      let elink = document.createElement('a');\n      elink.download = \"输出结果.xls\";\n      elink.style.display = 'none';\n      let blob = new Blob([content]);\n      elink.href = URL.createObjectURL(blob);\n      document.body.appendChild(elink);\n      elink.click();\n      document.body.removeChild(elink);\n    };\n\n    xhr.send();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ConfirmationPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Happy Confirmation Maker\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"\\u4E0A\\u4F20\\u51FD\\u8BC1\\u6A21\\u677F\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(UploadButton, {\n      accept: \"application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      onChange: this.uploadConfirmationTemplate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"UploadResult\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.confirmationTemplateFile == null ? '未上传' : this.state.confirmationTemplateFile.name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"\\u4E0A\\u4F20\\u8F93\\u5165\\u6A21\\u677F\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(UploadButton, {\n      accept: \"application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      onChange: this.uploadInputTemplate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"UploadResult\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.state.inputTemplateFile == null ? '未上传' : this.state.inputTemplateFile.name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(ExecuteButton, {\n      onClick: this.handelMerge,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass UploadButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getFiles = this.getFiles.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  getFiles() {\n    let ans = [];\n    let files = this.refs.fileLoader.files;\n\n    for (let i = 0; i < files.length; i++) {\n      ans.push(files[i]);\n    }\n\n    return ans;\n  }\n\n  onChange() {\n    console.log(this.getFiles());\n  }\n\n  render() {\n    let accept = this.props.accept;\n    return React.createElement(\"label\", {\n      className: \"UploadButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"\\u70B9\\u51FB\\u8FD9\\u91CC\\u4E0A\\u4F20\\u6587\\u4EF6\", React.createElement(\"input\", {\n      ref: \"fileLoader\",\n      onChange: this.props.onChange,\n      type: \"file\",\n      accept: accept,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass ExecuteButton extends React.Component {\n  render() {\n    return React.createElement(\"button\", {\n      className: \"ExecuteButton\",\n      onClick: this.props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"GoGoGo!\");\n  }\n\n}\n\nexport default ConfirmationPage;","map":{"version":3,"sources":["/Users/yangcao/WebstormProjects/jarvis-web/src/ConfirmationPage.js"],"names":["React","host","ConfirmationPage","Component","constructor","props","state","confirmationTemplateFile","inputTemplateFile","uploadConfirmationTemplate","bind","uploadInputTemplate","handelMerge","e","reader","FileReader","file","target","files","parent","onload","httpUpload","result","split","readAsDataURL","setState","httpExecute","d","uri","data","JSON","stringify","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","alert","console","log","open","setRequestHeader","send","responseType","oEvent","content","response","elink","document","createElement","download","style","display","blob","Blob","href","URL","createObjectURL","body","appendChild","click","removeChild","render","name","UploadButton","getFiles","onChange","ans","refs","fileLoader","i","length","push","accept","ExecuteButton","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./ConfirmationPage.css\"\n\nlet host = \"http://127.0.0.1:8000\";\n// let host = \"http://118.25.41.14:8091\";\n\nclass ConfirmationPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            confirmationTemplateFile: null,\n            inputTemplateFile: null,\n        };\n\n        this.uploadConfirmationTemplate = this.uploadConfirmationTemplate.bind(this);\n        this.uploadInputTemplate = this.uploadInputTemplate.bind(this);\n        this.handelMerge = this.handelMerge.bind(this);\n    }\n\n    uploadConfirmationTemplate(e) {\n        let reader = new FileReader();\n        let file = e.target.files[0];\n        reader.parent = this;\n        reader.onload = function(e) {\n            this.parent.httpUpload(this.result.split(',')[1], \"/upload_confirmation_template\");\n        };\n        reader.readAsDataURL(file);\n        this.setState({\n            confirmationTemplateFile: file,\n        });\n    }\n\n    uploadInputTemplate(e) {\n        let reader = new FileReader();\n        let file = e.target.files[0];\n        reader.parent = this;\n        reader.onload = function(e) {\n            this.parent.httpUpload(this.result.split(',')[1], \"/upload_input_template\");\n        };\n        reader.readAsDataURL(file);\n        this.setState({\n            inputTemplateFile: file,\n        });\n    }\n\n    handelMerge() {\n        this.httpExecute(\"/execute_confirmation_merge\")\n    }\n\n    httpUpload(d, uri) {\n        var data = JSON.stringify({\"data\":d});\n        var xhr = new XMLHttpRequest();\n        xhr.withCredentials = true;\n        xhr.addEventListener(\"readystatechange\", function() {\n            if(this.readyState === 4) {\n                alert(\"上传成功！\");\n            }\n        });\n\n        console.log(host+uri);\n        xhr.open(\"POST\", host + uri);\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\n        xhr.send(data);\n    }\n\n    httpExecute(uri) {\n        let xhr = new XMLHttpRequest();\n        xhr.withCredentials = true;\n        xhr.open(\"GET\", host + uri);\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\n        xhr.responseType = \"blob\";\n        xhr.onload = function (oEvent) {\n            let content = xhr.response;\n            let elink = document.createElement('a');\n            elink.download = \"输出结果.xls\";\n            elink.style.display = 'none';\n            let blob = new Blob([content]);\n            elink.href = URL.createObjectURL(blob);\n            document.body.appendChild(elink);\n            elink.click();\n            document.body.removeChild(elink);\n        };\n\n        xhr.send();\n    }\n\n    render() {\n        return (\n            <div className='ConfirmationPage'>\n                <h2>Happy Confirmation Maker</h2>\n                <br/>\n                <p>\n                    上传函证模板\n                    <br/><br/>\n                    {/*TODO: confirmation template upload*/}\n                    <UploadButton\n                        accept = {\"application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"}\n                        onChange = {this.uploadConfirmationTemplate}\n                    />\n                    <br/>\n                    <label className='UploadResult'>\n                        {this.state.confirmationTemplateFile == null ? '未上传': this.state.confirmationTemplateFile.name}\n                    </label>\n                </p>\n                <p>\n                    上传输入模板\n                    <br/><br/>\n                    {/*TODO: confirmation template upload*/}\n                    <UploadButton\n                        accept = {\"application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"}\n                        onChange = {this.uploadInputTemplate}\n                    />\n                    <br/>\n                    <label className='UploadResult'>\n                        {this.state.inputTemplateFile == null ? '未上传': this.state.inputTemplateFile.name}\n                    </label>\n                </p>\n                <p>\n                    <ExecuteButton\n                        onClick = {this.handelMerge}\n                    />\n                </p>\n                <br/><br/><br/><br/>\n\n            </div>\n        )\n    }\n}\n\nclass UploadButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getFiles = this.getFiles.bind(this);\n        this.onChange = this.onChange.bind(this)\n    }\n\n    getFiles() {\n        let ans = [];\n        let files = this.refs.fileLoader.files;\n        for (let i = 0; i < files.length; i++) {\n            ans.push(files[i])\n        }\n        return ans\n    }\n\n    onChange() {\n        console.log(this.getFiles())\n    }\n\n    render() {\n        let accept = this.props.accept;\n        return (\n            <label className=\"UploadButton\">\n                点击这里上传文件\n                <input ref='fileLoader' onChange={this.props.onChange} type=\"file\" accept={accept} />\n            </label>\n        );\n    }\n}\n\nclass ExecuteButton extends React.Component {\n    render() {\n        return (\n            <button className='ExecuteButton'\n                onClick ={this.props.onClick}\n            >GoGoGo!</button>\n        )\n    }\n}\n\nexport default ConfirmationPage;\n\n\n"]},"metadata":{},"sourceType":"module"}