{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/jarvis-web/src/ConfirmationPage.js\";\nimport React from 'react';\nimport \"./ConfirmationPage.css\";\nvar host = \"http://127.0.0.1:8000\";\n\nclass ConfirmationPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmationTemplateFile: null,\n      inputTemplateFile: null,\n      result: \"x\"\n    };\n    this.uploadConfirmationTemplate = this.uploadConfirmationTemplate.bind(this);\n    this.uploadInputTemplate = this.uploadInputTemplate.bind(this);\n    this.toBase64 = this.toBase64.bind(this);\n  }\n\n  uploadConfirmationTemplate(e) {\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    reader.parent = this;\n\n    reader.onload = function (e) {\n      this.parent.httpUpload(this.result.split(',')[1], \"/upload_confirmation_template\");\n    };\n\n    reader.readAsDataURL(file);\n    this.setState({\n      confirmationTemplateFile: file\n    });\n  }\n\n  uploadInputTemplate(e) {\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    reader.parent = this;\n\n    reader.onload = function (e) {\n      this.parent.httpUpload(this.result.split(',')[1], \"/upload_input_template\");\n    };\n\n    reader.readAsDataURL(file);\n    this.setState({\n      inputTemplateFile: file\n    });\n  }\n\n  httpUpload(d, uri) {\n    var data = JSON.stringify({\n      \"data\": d\n    });\n    var xhr = new XMLHttpRequest();\n    xhr.withCredentials = true;\n    xhr.addEventListener(\"readystatechange\", function () {\n      if (this.readyState === 4) {\n        alert(\"上传成功！\");\n      }\n    });\n    console.log(host + uri);\n    xhr.open(\"POST\", host + uri);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.send(data);\n  }\n\n  toBase64(e) {\n    let reader = new FileReader();\n    let base64 = '';\n\n    reader.onload = function (e) {\n      base64 = this.result;\n    };\n\n    reader.readAsDataURL(e);\n    console.log(base64);\n    this.setState({\n      result: base64\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ConfirmationPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Happy Confirmation Maker\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"\\u4E0A\\u4F20\\u51FD\\u8BC1\\u6A21\\u677F\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(UploadButton, {\n      accept: \"application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      onChange: this.uploadConfirmationTemplate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"UploadResult\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.confirmationTemplateFile == null ? '未上传' : this.state.confirmationTemplateFile.name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"\\u4E0A\\u4F20\\u8F93\\u5165\\u6A21\\u677F\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(UploadButton, {\n      accept: \"application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      onChange: this.uploadInputTemplate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"UploadResult\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.inputTemplateFile == null ? '未上传' : this.state.inputTemplateFile.name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(ExecuteButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass UploadButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getFiles = this.getFiles.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  getFiles() {\n    let ans = [];\n    let files = this.refs.fileLoader.files;\n\n    for (let i = 0; i < files.length; i++) {\n      ans.push(files[i]);\n    }\n\n    return ans;\n  }\n\n  onChange() {\n    console.log(this.getFiles());\n  }\n\n  render() {\n    let accept = this.props.accept;\n    return React.createElement(\"label\", {\n      className: \"UploadButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"\\u70B9\\u51FB\\u8FD9\\u91CC\\u4E0A\\u4F20\\u6587\\u4EF6\", React.createElement(\"input\", {\n      ref: \"fileLoader\",\n      onChange: this.props.onChange,\n      type: \"file\",\n      accept: accept,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass ExecuteButton extends React.Component {\n  render() {\n    return React.createElement(\"label\", {\n      className: \"ExecuteButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"GoGoGo!\"));\n  }\n\n}\n\nexport default ConfirmationPage;","map":{"version":3,"sources":["/home/ubuntu/jarvis-web/src/ConfirmationPage.js"],"names":["React","host","ConfirmationPage","Component","constructor","props","state","confirmationTemplateFile","inputTemplateFile","result","uploadConfirmationTemplate","bind","uploadInputTemplate","toBase64","e","reader","FileReader","file","target","files","parent","onload","httpUpload","split","readAsDataURL","setState","d","uri","data","JSON","stringify","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","alert","console","log","open","setRequestHeader","send","base64","render","name","UploadButton","getFiles","onChange","ans","refs","fileLoader","i","length","push","accept","ExecuteButton"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./ConfirmationPage.css\"\n\nvar host = \"http://127.0.0.1:8000\";\n\nclass ConfirmationPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            confirmationTemplateFile: null,\n            inputTemplateFile: null,\n            result: \"x\",\n        };\n\n        this.uploadConfirmationTemplate = this.uploadConfirmationTemplate.bind(this);\n        this.uploadInputTemplate = this.uploadInputTemplate.bind(this);\n        this.toBase64 = this.toBase64.bind(this);\n    }\n\n    uploadConfirmationTemplate(e) {\n        let reader = new FileReader();\n        let file = e.target.files[0];\n        reader.parent = this;\n        reader.onload = function(e) {\n            this.parent.httpUpload(this.result.split(',')[1], \"/upload_confirmation_template\");\n        };\n        reader.readAsDataURL(file);\n        this.setState({\n            confirmationTemplateFile: file,\n        });\n    }\n\n    uploadInputTemplate(e) {\n        let reader = new FileReader();\n        let file = e.target.files[0];\n        reader.parent = this;\n        reader.onload = function(e) {\n            this.parent.httpUpload(this.result.split(',')[1], \"/upload_input_template\");\n        };\n        reader.readAsDataURL(file);\n        this.setState({\n            inputTemplateFile: file,\n        });\n    }\n\n    httpUpload(d, uri) {\n        var data = JSON.stringify({\"data\":d});\n        var xhr = new XMLHttpRequest();\n        xhr.withCredentials = true;\n        xhr.addEventListener(\"readystatechange\", function() {\n            if(this.readyState === 4) {\n                alert(\"上传成功！\");\n            }\n        });\n\n        console.log(host+uri);\n        xhr.open(\"POST\", host + uri);\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\n        xhr.send(data);\n    }\n\n    toBase64(e) {\n        let reader = new FileReader();\n        let base64 = '';\n        reader.onload = function(e) {\n            base64 = this.result\n        };\n        reader.readAsDataURL(e);\n        console.log(base64);\n        this.setState({\n            result: base64\n        })\n    }\n\n    render() {\n        return (\n            <div className='ConfirmationPage'>\n                <h2>Happy Confirmation Maker</h2>\n                <br/>\n                <p>\n                    上传函证模板\n                    <br/><br/>\n                    {/*TODO: confirmation template upload*/}\n                    <UploadButton\n                        accept = {\"application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"}\n                        onChange = {this.uploadConfirmationTemplate}\n                    />\n                    <br/>\n                    <label className='UploadResult'>\n                        {this.state.confirmationTemplateFile == null ? '未上传': this.state.confirmationTemplateFile.name}\n                    </label>\n                </p>\n                <p>\n                    上传输入模板\n                    <br/><br/>\n                    {/*TODO: confirmation template upload*/}\n                    <UploadButton\n                        accept = {\"application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"}\n                        onChange = {this.uploadInputTemplate}\n                    />\n                    <br/>\n                    <label className='UploadResult'>\n                        {this.state.inputTemplateFile == null ? '未上传': this.state.inputTemplateFile.name}\n                    </label>\n                </p>\n                <p>\n                    <ExecuteButton />\n                </p>\n                <br/><br/><br/><br/>\n\n            </div>\n        )\n    }\n}\n\nclass UploadButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getFiles = this.getFiles.bind(this);\n        this.onChange = this.onChange.bind(this)\n    }\n\n    getFiles() {\n        let ans = [];\n        let files = this.refs.fileLoader.files;\n        for (let i = 0; i < files.length; i++) {\n            ans.push(files[i])\n        }\n        return ans\n    }\n\n    onChange() {\n        console.log(this.getFiles())\n    }\n\n    render() {\n        let accept = this.props.accept;\n        return (\n            <label className=\"UploadButton\">\n                点击这里上传文件\n                <input ref='fileLoader' onChange={this.props.onChange} type=\"file\" accept={accept} />\n            </label>\n        );\n    }\n}\n\nclass ExecuteButton extends React.Component {\n    render() {\n        return (\n            <label className='ExecuteButton'>\n                <button>GoGoGo!</button>\n            </label>\n        )\n    }\n}\n\nexport default ConfirmationPage;\n\n\n"]},"metadata":{},"sourceType":"module"}