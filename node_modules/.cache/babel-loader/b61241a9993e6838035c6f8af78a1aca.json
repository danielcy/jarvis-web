{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\r\n * Layout for visual, the priority higher than other layout, and before brush visual.\r\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n  });\n  layoutCovers(ecModel);\n});\n\nfunction layoutCovers(ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n}\n/**\r\n * Register the visual encoding if this modules required.\r\n */\n\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\r\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\r\n     *\r\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\r\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\r\n     *                └!hasBrushExist┘                                              └nothing.\r\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\r\n     *                └!hasBrushExist┘                                              └nothing.\r\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\r\n     *   !brushed┘                                                                  └nothing.\r\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\r\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}\n\nexports.layoutCovers = layoutCovers;","map":{"version":3,"sources":["D:/code/web/jarvis-web/node_modules/echarts/lib/component/brush/visualEncoding.js"],"names":["echarts","require","zrUtil","BoundingRect","visualSolution","selector","throttleUtil","BrushTargetManager","STATE_LIST","DISPATCH_METHOD","DISPATCH_FLAG","PRIORITY_BRUSH","PRIORITY","VISUAL","BRUSH","registerLayout","ecModel","api","payload","eachComponent","mainType","brushModel","type","setBrushOption","key","brushOption","brushType","layoutCovers","brushTargetManager","option","setInputRanges","areas","registerVisual","brushSelected","throttleType","throttleDelay","brushIndex","thisBrushSelected","brushId","id","brushName","name","clone","selected","push","brushLink","linkedSeriesMap","selectedDataIndexForLink","rangeInfoBySeries","hasBrushExists","map","area","bindSelector","defaults","boundingRect","boundingRectBuilders","visualMappings","createVisualMappings","mappingOption","mappingMethod","isArray","each","seriesIndex","linkOthers","brushed","rangeInfoList","length","eachSeries","seriesModel","subType","stepAParallel","stepAOthers","coordSys","coordinateSystem","hasAxisBrushed","eachActiveState","getData","activeState","dataIndex","selectorsByBrushType","getSelectorsByBrushType","brushModelNotControll","controlSeries","data","checkInRange","seriesBrushSelected","seriesId","seriesName","getValueState","getRawIndex","applyVisual","dispatchAction","zr","getZr","doDispatch","fn","createOrUpdate","isDisposed","batch","i","len","selectors","brushSelector","isString","sels","selectorsByElementType","itemLayout","getItemLayout","isFunction","bSelector","sel","seriesIndices","indexOf","selFn","elType","lineX","noop","lineY","rect","getBoundingRectFromMinMax","range","polygon","minMax","Infinity","rg","exports"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nvar echarts = require(\"../../echarts\");\r\n\r\nvar zrUtil = require(\"zrender/lib/core/util\");\r\n\r\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\r\n\r\nvar visualSolution = require(\"../../visual/visualSolution\");\r\n\r\nvar selector = require(\"./selector\");\r\n\r\nvar throttleUtil = require(\"../../util/throttle\");\r\n\r\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\r\nvar DISPATCH_METHOD = '__ecBrushSelect';\r\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\r\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\r\n/**\r\n * Layout for visual, the priority higher than other layout, and before brush visual.\r\n */\r\n\r\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\r\n  ecModel.eachComponent({\r\n    mainType: 'brush'\r\n  }, function (brushModel) {\r\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\r\n      brushType: false\r\n    });\r\n  });\r\n  layoutCovers(ecModel);\r\n});\r\n\r\nfunction layoutCovers(ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'brush'\r\n  }, function (brushModel) {\r\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\r\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\r\n  });\r\n}\r\n/**\r\n * Register the visual encoding if this modules required.\r\n */\r\n\r\n\r\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\r\n  var brushSelected = [];\r\n  var throttleType;\r\n  var throttleDelay;\r\n  ecModel.eachComponent({\r\n    mainType: 'brush'\r\n  }, function (brushModel, brushIndex) {\r\n    var thisBrushSelected = {\r\n      brushId: brushModel.id,\r\n      brushIndex: brushIndex,\r\n      brushName: brushModel.name,\r\n      areas: zrUtil.clone(brushModel.areas),\r\n      selected: []\r\n    }; // Every brush component exists in event params, convenient\r\n    // for user to find by index.\r\n\r\n    brushSelected.push(thisBrushSelected);\r\n    var brushOption = brushModel.option;\r\n    var brushLink = brushOption.brushLink;\r\n    var linkedSeriesMap = [];\r\n    var selectedDataIndexForLink = [];\r\n    var rangeInfoBySeries = [];\r\n    var hasBrushExists = 0;\r\n\r\n    if (!brushIndex) {\r\n      // Only the first throttle setting works.\r\n      throttleType = brushOption.throttleType;\r\n      throttleDelay = brushOption.throttleDelay;\r\n    } // Add boundingRect and selectors to range.\r\n\r\n\r\n    var areas = zrUtil.map(brushModel.areas, function (area) {\r\n      return bindSelector(zrUtil.defaults({\r\n        boundingRect: boundingRectBuilders[area.brushType](area)\r\n      }, area));\r\n    });\r\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\r\n      mappingOption.mappingMethod = 'fixed';\r\n    });\r\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\r\n      linkedSeriesMap[seriesIndex] = 1;\r\n    });\r\n\r\n    function linkOthers(seriesIndex) {\r\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\r\n    } // If no supported brush or no brush on the series,\r\n    // all visuals should be in original state.\r\n\r\n\r\n    function brushed(rangeInfoList) {\r\n      return !!rangeInfoList.length;\r\n    }\r\n    /**\r\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\r\n     *\r\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\r\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\r\n     *                └!hasBrushExist┘                                              └nothing.\r\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\r\n     *                └!hasBrushExist┘                                              └nothing.\r\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\r\n     *   !brushed┘                                                                  └nothing.\r\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\r\n     */\r\n    // Step A\r\n\r\n\r\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\r\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\r\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\r\n    });\r\n\r\n    function stepAParallel(seriesModel, seriesIndex) {\r\n      var coordSys = seriesModel.coordinateSystem;\r\n      hasBrushExists |= coordSys.hasAxisBrushed();\r\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\r\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\r\n      });\r\n    }\r\n\r\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\r\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\r\n\r\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\r\n        return;\r\n      }\r\n\r\n      zrUtil.each(areas, function (area) {\r\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\r\n        hasBrushExists |= brushed(rangeInfoList);\r\n      });\r\n\r\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\r\n        var data = seriesModel.getData();\r\n        data.each(function (dataIndex) {\r\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\r\n            selectedDataIndexForLink[dataIndex] = 1;\r\n          }\r\n        });\r\n      }\r\n    } // Step B\r\n\r\n\r\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\r\n      var seriesBrushSelected = {\r\n        seriesId: seriesModel.id,\r\n        seriesIndex: seriesIndex,\r\n        seriesName: seriesModel.name,\r\n        dataIndex: []\r\n      }; // Every series exists in event params, convenient\r\n      // for user to find series by seriesIndex.\r\n\r\n      thisBrushSelected.selected.push(seriesBrushSelected);\r\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\r\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\r\n      var data = seriesModel.getData();\r\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\r\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\r\n      } : function (dataIndex) {\r\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\r\n      }; // If no supported brush or no brush, all visuals are in original state.\r\n\r\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\r\n    });\r\n  });\r\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\r\n});\r\n\r\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\r\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\r\n  // triggered when do `setOption` in event listener, which we do not find\r\n  // satisfactory way to solve yet. Some considered resolutions:\r\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\r\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\r\n  // also detect value changes in selected data) might bring complexity or fragility.\r\n  // (b) Use spectial param like `silent` to suppress event triggering.\r\n  // But such kind of volatile param may be weird in `setOption`.\r\n  if (!payload) {\r\n    return;\r\n  }\r\n\r\n  var zr = api.getZr();\r\n\r\n  if (zr[DISPATCH_FLAG]) {\r\n    return;\r\n  }\r\n\r\n  if (!zr[DISPATCH_METHOD]) {\r\n    zr[DISPATCH_METHOD] = doDispatch;\r\n  }\r\n\r\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\r\n  fn(api, brushSelected);\r\n}\r\n\r\nfunction doDispatch(api, brushSelected) {\r\n  if (!api.isDisposed()) {\r\n    var zr = api.getZr();\r\n    zr[DISPATCH_FLAG] = true;\r\n    api.dispatchAction({\r\n      type: 'brushSelect',\r\n      batch: brushSelected\r\n    });\r\n    zr[DISPATCH_FLAG] = false;\r\n  }\r\n}\r\n\r\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\r\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\r\n    var area = rangeInfoList[i];\r\n\r\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction getSelectorsByBrushType(seriesModel) {\r\n  var brushSelector = seriesModel.brushSelector;\r\n\r\n  if (zrUtil.isString(brushSelector)) {\r\n    var sels = [];\r\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\r\n      sels[brushType] = function (dataIndex, data, selectors, area) {\r\n        var itemLayout = data.getItemLayout(dataIndex);\r\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\r\n      };\r\n    });\r\n    return sels;\r\n  } else if (zrUtil.isFunction(brushSelector)) {\r\n    var bSelector = {};\r\n    zrUtil.each(selector, function (sel, brushType) {\r\n      bSelector[brushType] = brushSelector;\r\n    });\r\n    return bSelector;\r\n  }\r\n\r\n  return brushSelector;\r\n}\r\n\r\nfunction brushModelNotControll(brushModel, seriesIndex) {\r\n  var seriesIndices = brushModel.option.seriesIndex;\r\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\r\n}\r\n\r\nfunction bindSelector(area) {\r\n  var selectors = area.selectors = {};\r\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\r\n    // Do not use function binding or curry for performance.\r\n    selectors[elType] = function (itemLayout) {\r\n      return selFn(itemLayout, selectors, area);\r\n    };\r\n  });\r\n  return area;\r\n}\r\n\r\nvar boundingRectBuilders = {\r\n  lineX: zrUtil.noop,\r\n  lineY: zrUtil.noop,\r\n  rect: function (area) {\r\n    return getBoundingRectFromMinMax(area.range);\r\n  },\r\n  polygon: function (area) {\r\n    var minMax;\r\n    var range = area.range;\r\n\r\n    for (var i = 0, len = range.length; i < len; i++) {\r\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\r\n      var rg = range[i];\r\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\r\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\r\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\r\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\r\n    }\r\n\r\n    return minMax && getBoundingRectFromMinMax(minMax);\r\n  }\r\n};\r\n\r\nfunction getBoundingRectFromMinMax(minMax) {\r\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\r\n}\r\n\r\nexports.layoutCovers = layoutCovers;"]},"metadata":{},"sourceType":"script"}